{"version":3,"file":"static/js/2183.40d5ce41.chunk.js","mappings":"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","sources":["app/components/data-table/TableHead.jsx","app/components/data-table/TableToolbar.jsx","app/components/data-table/utils.js","app/hooks/useProducts.js","app/hooks/useTable.js","app/views/pages/products/ProductList.jsx","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["import { Checkbox, TableCell, TableRow, TableSortLabel } from \"@mui/material\";\nimport MuiTableHead from \"@mui/material/TableHead\";\n\nconst TableHead = (props) => {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells } =\n    props;\n\n  const createSortHandler = (property) => (event) => onRequestSort(event, property);\n\n  return (\n    <MuiTableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            onChange={onSelectAllClick}\n            checked={rowCount > 0 && numSelected === rowCount}\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n          />\n        </TableCell>\n\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align}\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              onClick={createSortHandler(headCell.id)}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n            >\n              {headCell.label}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </MuiTableHead>\n  );\n};\n\n// TableHead.propTypes = {\n//   numSelected: PropTypes.number.isRequired,\n//   onRequestSort: PropTypes.func.isRequired,\n//   onSelectAllClick: PropTypes.func.isRequired,\n//   order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n//   orderBy: PropTypes.string.isRequired,\n//   rowCount: PropTypes.number.isRequired,\n// };\n\nexport default TableHead;\n","import { Delete, FilterList } from \"@mui/icons-material\";\nimport { alpha, IconButton, Toolbar, Tooltip, Typography } from \"@mui/material\";\n\nconst TableToolbar = ({ numSelected, title }) => {\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography sx={{ flex: \"1 1 100%\" }} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography sx={{ flex: \"1 1 100%\" }} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          {title}\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <Delete />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterList />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nexport default TableToolbar;\n","function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) return -1;\n  if (b[orderBy] > a[orderBy]) return 1;\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  if (order === \"desc\") return (a, b) => descendingComparator(a, b, orderBy);\n  else return (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport { stableSort, getComparator, descendingComparator };\n","// import { getProducts } from \"app/redux/slices/productSlice\";\n// import { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\n// const useProducts = () => {\n//   const dispatch = useDispatch();\n//   const { error, products, loading } = useSelector((state) => state.products);\n\n//   useEffect(() => {\n//     dispatch(getProducts());\n//   }, [dispatch]);\n\n//   return {\n//     products,\n//     isError: error,\n//     isLoading: loading,\n//   };\n// };\n\n// export default useProducts;\n\n\n\nimport { useState, useEffect } from \"react\";\n\nconst useProducts = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch(\"https://api.example.com/products\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch products\");\n        }\n        const data = await response.json();\n        setProducts(data);\n        setLoading(false);\n        setError(null);\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n        setProducts([]);\n        setLoading(false);\n        setError(\"Failed to fetch products\");\n      }\n    };\n\n    fetchProducts();\n  }, []);\n\n  return {\n    products,\n    isLoading: loading,\n    isError: error,\n  };\n};\n\nexport default useProducts;\n","import { useState } from \"react\";\n\nconst useTable = ({ defaultOrderBy = \"name\" }) => {\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState(\"asc\");\n  const [selected, setSelected] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [orderBy, setOrderBy] = useState(defaultOrderBy);\n\n  const handleRequestSort = (_, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (checked, newSelected) => {\n    if (checked) {\n      setSelected(newSelected);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (_, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (_, newPage) => setPage(newPage);\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  return {\n    page,\n    order,\n    orderBy,\n    selected,\n    rowsPerPage,\n\n    isSelected,\n    handleClick,\n    handleChangePage,\n    handleRequestSort,\n    handleSelectAllClick,\n    handleChangeRowsPerPage,\n  };\n};\n\nexport default useTable;\n","import { Edit, TrendingFlat } from '@mui/icons-material';\nimport {\n  Box,\n  Checkbox,\n  IconButton,\n  Paper,\n  styled,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  useTheme\n} from '@mui/material';\nimport { Breadcrumb, MatxLoading } from 'app/components';\nimport TableHead from 'app/components/data-table/TableHead';\nimport TableToolbar from 'app/components/data-table/TableToolbar';\nimport { getComparator, stableSort } from 'app/components/data-table/utils';\nimport { H5, Span } from 'app/components/Typography';\nimport useProducts from 'app/hooks/useProducts';\nimport useTable from 'app/hooks/useTable';\nimport { useNavigate } from 'react-router-dom';\n\n// styled components\nconst IMG = styled('img')({\n  height: 32,\n  borderRadius: '4px'\n});\n\nconst FlexBox = styled(Box)({\n  display: 'flex',\n  alignItems: 'center'\n});\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' }\n  }\n}));\n\nconst StyledSpan = styled(Span)({\n  color: '#fff',\n  padding: '2px 8px',\n  borderRadius: '4px'\n});\n\nconst ProductList = () => {\n  const {\n    page,\n    order,\n    orderBy,\n    selected,\n    rowsPerPage,\n\n    isSelected,\n    handleClick,\n    handleChangePage,\n    handleRequestSort,\n    handleSelectAllClick,\n    handleChangeRowsPerPage\n  } = useTable({ defaultOrderBy: 'name' });\n\n  const navigate = useNavigate();\n  const { isLoading, products } = useProducts();\n\n  const { palette } = useTheme();\n  const bgError = palette.error.main;\n  const bgGreen = 'rgba(9, 182, 109, 1)';\n  const bgSecondary = palette.secondary.main;\n\n  // TABLE HEADER COLUMN LIST\n  const columns = [\n    { id: 'name', align: 'left', disablePadding: true, label: 'Name' },\n    { id: 'description', align: 'center', disablePadding: false, label: 'Description' },\n    { id: 'quantity', align: 'center', disablePadding: false, label: 'Quantity' },\n    { id: 'price', align: 'center', disablePadding: false, label: 'Price' },\n    { id: 'edit', align: 'center', disablePadding: false, label: 'Edit' }\n  ];\n\n  // RENDER PRODUCT QUANTITY STATUS\n  const renderChip = (quantity) => {\n    if (quantity === 0) return <StyledSpan bgcolor={bgError}>Out of Stock</StyledSpan>;\n    else if (quantity >= 30) return <StyledSpan bgcolor={bgGreen}>Available</StyledSpan>;\n    else if (quantity < 30) return <StyledSpan bgcolor={bgSecondary}>Limited Stock</StyledSpan>;\n  };\n\n  const handleSelectAllRows = (event) => {\n    const newSelected = productList.map((n) => n.name);\n    handleSelectAllClick(event.target.checked, newSelected);\n  };\n\n  if (isLoading) return <MatxLoading />;\n\n  const productList = products?.map((item) => ({\n    name: item.title,\n    price: item.price,\n    imgUrl: item.imgUrl,\n    quantity: item.totalUnit,\n    description: item.description\n  }));\n\n  return (\n    <Container>\n      <div className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: 'Pages', path: '/pages' }, { name: 'Product List' }]} />\n      </div>\n\n      <Paper sx={{ width: '100%', mb: 2 }}>\n        <TableToolbar title=\"All Products\" numSelected={selected.length} />\n\n        <TableContainer>\n          <Table sx={{ minWidth: 750 }}>\n            <TableHead\n              order={order}\n              orderBy={orderBy}\n              headCells={columns}\n              rowCount={productList.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllRows}\n            />\n\n            <TableBody>\n              {stableSort(productList, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const isItemSelected = isSelected(row.name);\n\n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={row.name}\n                      role=\"checkbox\"\n                      selected={isItemSelected}\n                      aria-checked={isItemSelected}\n                      onClick={(event) => handleClick(event, row.name)}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox color=\"primary\" checked={isItemSelected} />\n                      </TableCell>\n\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <FlexBox gap={1}>\n                          <IMG src={row.imgUrl} alt=\"user\" />\n                          <H5 fontSize={15}>{row.name}</H5>\n                        </FlexBox>\n                      </TableCell>\n\n                      <TableCell align=\"center\">{row.description.substring(0, 30)}...</TableCell>\n\n                      <TableCell align=\"center\">{renderChip(row.quantity)}</TableCell>\n\n                      <TableCell align=\"center\">{row.price}</TableCell>\n\n                      <TableCell align=\"center\">\n                        <IconButton onClick={() => navigate('/pages/new-product')}>\n                          <Edit />\n                        </IconButton>\n\n                        <IconButton onClick={() => navigate('/pages/view-product')}>\n                          <TrendingFlat />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <TablePagination\n          page={page}\n          component=\"div\"\n          rowsPerPage={rowsPerPage}\n          count={productList.length}\n          onPageChange={handleChangePage}\n          rowsPerPageOptions={[5, 10, 25]}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Container>\n  );\n};\n\nexport default ProductList;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","headCells","_jsx","MuiTableHead","children","_jsxs","TableRow","TableCell","padding","Checkbox","color","onChange","checked","indeterminate","map","headCell","align","disablePadding","sortDirection","id","TableSortLabel","active","onClick","property","event","direction","label","_ref","title","Toolbar","sx","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","Typography","flex","variant","component","Tooltip","IconButton","Delete","FilterList","stableSort","array","comparator","stabilizedThis","el","index","sort","a","b","descendingComparator","getComparator","useProducts","products","setProducts","useState","loading","setLoading","error","setError","useEffect","async","response","fetch","ok","Error","data","json","console","fetchProducts","isLoading","isError","defaultOrderBy","page","setPage","setOrder","selected","setSelected","rowsPerPage","setRowsPerPage","setOrderBy","isSelected","name","indexOf","handleClick","_","selectedIndex","newSelected","concat","slice","length","handleChangePage","newPage","handleRequestSort","handleSelectAllClick","handleChangeRowsPerPage","parseInt","target","value","IMG","styled","height","borderRadius","FlexBox","Box","display","alignItems","Container","margin","breakpoints","down","marginBottom","StyledSpan","Span","ProductList","useTable","navigate","useNavigate","useTheme","bgError","bgSecondary","secondary","MatxLoading","productList","item","price","imgUrl","quantity","totalUnit","description","className","Breadcrumb","routeSegments","path","Paper","width","mb","TableToolbar","TableContainer","Table","minWidth","TableHead","n","TableBody","row","isItemSelected","hover","tabIndex","role","scope","gap","src","alt","H5","fontSize","substring","Edit","TrendingFlat","TablePagination","count","onPageChange","rowsPerPageOptions","onRowsPerPageChange","createSvgIcon","d"],"sourceRoot":""}