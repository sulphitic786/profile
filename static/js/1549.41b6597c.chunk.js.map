{"version":3,"file":"static/js/1549.41b6597c.chunk.js","mappings":"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","sources":["app/views/todo/TodoItem.jsx","app/views/todo/TodoList.jsx","app/views/todo/AppTodo.jsx","app/views/todo/TodoService.js","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["import {\n  Box,\n  Card,\n  Checkbox,\n  Chip,\n  FormControlLabel,\n  Icon,\n  IconButton,\n  MenuItem,\n  styled,\n  useTheme\n} from \"@mui/material\";\nimport { MatxMenu } from \"../../components\";\nimport { Paragraph } from \"../../components/Typography\";\nimport { Link } from \"react-router-dom\";\n\nconst FlexBox = styled(Box)({\n  display: \"flex\",\n  alignItems: \"center\"\n});\n\nconst FlexWrap = styled(FlexBox)({\n  flexWrap: \"wrap\"\n});\n\nconst StyledLink = styled(Link)({\n  flexGrow: 1,\n  display: \"flex\",\n  alignItems: \"center\"\n});\n\nconst TodoItem = ({ todo = { tag: [] }, tagList, updateTodo }) => {\n  const { palette } = useTheme();\n  const textMuted = palette.text.secondary;\n\n  return (\n    <Card sx={{ borderRadius: 0 }} elevation={1}>\n      <FlexWrap p={2}>\n        <StyledLink to={`/todo/list/${todo.id}`}>\n          <Icon sx={{ cursor: \"move\" }}>open_with</Icon>\n          <Box ml={2}>\n            <Paragraph sx={{ mb: 2 }}>{todo.title}</Paragraph>\n            <Paragraph sx={{ mb: \"12px\", color: textMuted }}>{todo.note}</Paragraph>\n            {todo.tag.map((tagId, index) => {\n              let tagName = (tagList.find((tag) => tag.id === tagId) || {}).name;\n              if (!tagName) return null;\n              else {\n                return (\n                  <Chip\n                    key={index}\n                    sx={{ mr: \"12px\" }}\n                    label={tagList.find((tag) => tag.id === tagId).name}\n                  />\n                );\n              }\n            })}\n          </Box>\n        </StyledLink>\n\n        <FlexWrap>\n          <IconButton onClick={() => updateTodo({ ...todo, important: !todo.important })}>\n            <Icon color={todo.important ? \"error\" : \"inherit\"}>\n              {todo.important ? \"error\" : \"error_outline\"}\n            </Icon>\n          </IconButton>\n\n          <IconButton onClick={() => updateTodo({ ...todo, starred: !todo.starred })}>\n            <Icon color={todo.starred ? \"secondary\" : \"inherit\"}>\n              {todo.starred ? \"star\" : \"star_outline\"}\n            </Icon>\n          </IconButton>\n\n          <MatxMenu\n            menuButton={\n              <IconButton>\n                <Icon>more_vert</Icon>\n              </IconButton>\n            }\n          >\n            <MenuItem>\n              <FormControlLabel\n                onChange={() => updateTodo({ ...todo, done: !todo.done })}\n                control={<Checkbox checked={todo.done} />}\n                label={`Mark As ${todo.done ? \"Und\" : \"D\"}one`}\n              />\n            </MenuItem>\n\n            <MenuItem>\n              <FormControlLabel\n                onChange={() => updateTodo({ ...todo, read: !todo.read })}\n                control={<Checkbox checked={todo.read} />}\n                label={`Mark As ${todo.read ? \"Unr\" : \"R\"}ead`}\n              />\n            </MenuItem>\n          </MatxMenu>\n        </FlexWrap>\n      </FlexWrap>\n    </Card>\n  );\n};\n\nexport default TodoItem;\n","import { Box, Button, Card, Icon, IconButton, MenuItem, styled } from \"@mui/material\";\nimport { MatxMenu } from \"../../components\";\nimport { FlexBetween } from \"../../components/FlexBox\";\nimport { H2 } from \"../../components/Typography\";\nimport { debounce } from \"lodash\";\nimport { useCallback, useEffect, useState } from \"react\";\n// import { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { useNavigate } from \"react-router-dom\";\nimport TodoItem from \"./TodoItem\";\nimport { getAllTodo, getAllTodoTag, reorderTodoList, updateTodoById } from \"./TodoService\";\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  margin: \"30px\",\n  position: \"relative\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" }\n}));\n\nconst ContentBox = styled(FlexBetween)(() => ({\n  paddingTop: \"8px\",\n  paddingBottom: \"8px\",\n  background: \"rgba(0, 0, 0, 0.01)\"\n}));\n\nconst TodoList = ({ query }) => {\n  const navigate = useNavigate();\n  const [tagList, setTagList] = useState([]);\n  const [isAlive, setIsAlive] = useState(true);\n  const [todoList, setTodoList] = useState([]);\n  const [filteredTodoList, setFilteredTodoList] = useState([]);\n\n  const getAllTodoAndTagList = useCallback(async () => {\n    let [{ data: todoList }, { data: tagList }] = await Promise.all([\n      getAllTodo(),\n      getAllTodoTag()\n    ]);\n    if (isAlive) {\n      setFilteredTodoList(todoList);\n      setTodoList(todoList);\n      setTagList(tagList);\n    }\n  }, [isAlive]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const search = useCallback(\n    debounce((query) => {\n      query = query.trim().toLowerCase();\n      if (query !== \"\") {\n        let filteredTodoList = todoList.filter(\n          (todo) => todo.title.toLowerCase().match(query) || todo.note.toLowerCase().match(query)\n        );\n        setFilteredTodoList([...filteredTodoList]);\n      } else {\n        setFilteredTodoList(todoList);\n      }\n    }, 250),\n    [todoList]\n  );\n\n  useEffect(() => {\n    getAllTodoAndTagList();\n    return () => setIsAlive(false);\n  }, [getAllTodoAndTagList]);\n\n  useEffect(() => {\n    search(query);\n  }, [query, search]);\n\n  const updateTodo = async (todo) => {\n    const { data: updatedTodo } = await updateTodoById(todo);\n    if (isAlive) {\n      let list1 = todoList.map((item) => {\n        if (item.id === updatedTodo.id) return updatedTodo;\n        return item;\n      });\n\n      let list2 = filteredTodoList.map((item) => {\n        if (item.id === updatedTodo.id) return updatedTodo;\n        return item;\n      });\n\n      setTodoList([...list1]);\n      setFilteredTodoList([...list2]);\n    }\n  };\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  const handleDragEnd = async (result) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    let todoList = reorder(filteredTodoList, result.source.index, result.destination.index);\n\n    let { data } = await reorderTodoList(todoList);\n\n    if (isAlive) {\n      setFilteredTodoList(data);\n      setTodoList(data);\n    }\n  };\n\n  const filterTodoListByProperty = (queryField, queryValue) => {\n    if (queryField !== \"all\") {\n      let list = todoList.filter((todo) => todo[queryField] === queryValue);\n      setFilteredTodoList([...list]);\n    } else {\n      setFilteredTodoList([...todoList]);\n    }\n  };\n\n  const filterTodoListByTag = (tagId) => {\n    if (tagId !== \"all\") {\n      let list = todoList.filter((todo) => todo.tag.includes(tagId));\n      setFilteredTodoList([...list]);\n    } else {\n      setFilteredTodoList([...todoList]);\n    }\n  };\n\n  // New Drag and Drop data logic\n  const [dragAbleItem, setDragAbleItem] = useState([]);\n  const getItems = (count) =>\n    count.map((k, i) => ({\n      done: k.done,\n      dueDate: k.dueDate,\n      id: `${k.id}`,\n      important: k.important,\n      note: k.note,\n      read: k.read,\n      selected: k.selected,\n      starred: k.starred,\n      startDate: k.startDate,\n      tag: k.tag,\n      title: k.title\n    }));\n\n  useEffect(() => {\n    if (filteredTodoList.length > 0) {\n      setDragAbleItem(getItems(filteredTodoList));\n    }\n  }, [filteredTodoList]);\n\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    const tempItems = reorder(dragAbleItem, result.source.index, result.destination.index);\n    setDragAbleItem(tempItems);\n  };\n\n  return (\n    <StyledCard className=\"todo\">\n      <ContentBox>\n        <div>\n          <MatxMenu\n            menuButton={\n              <IconButton size=\"large\">\n                <Icon>arrow_drop_down</Icon>\n              </IconButton>\n            }\n          >\n            <MenuItem onClick={() => filterTodoListByProperty(\"all\")}>All</MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"read\", true)}>Read</MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"read\", false)}>Unread</MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"done\", true)}>Done</MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"done\", false)}>Undone</MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"important\", true)}>\n              Important\n            </MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"important\", false)}>\n              Unimportant\n            </MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"starred\", true)}>Starred</MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"starred\", false)}>\n              Unstarred\n            </MenuItem>\n          </MatxMenu>\n          <MatxMenu\n            menuButton={\n              <IconButton size=\"large\">\n                <Icon>label</Icon>\n              </IconButton>\n            }\n          >\n            <MenuItem\n              sx={{ textTransform: \"capitalize\" }}\n              onClick={() => filterTodoListByTag(\"all\")}\n            >\n              all\n            </MenuItem>\n            {tagList.map((tag) => (\n              <MenuItem\n                key={tag.id}\n                sx={{ textTransform: \"capitalize\" }}\n                onClick={() => filterTodoListByTag(tag.id)}\n              >\n                {tag.name}\n              </MenuItem>\n            ))}\n          </MatxMenu>\n        </div>\n\n        <Box pr={2}>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => navigate(\"/todo/list/add\")}>\n            Create Todo\n          </Button>\n        </Box>\n      </ContentBox>\n\n      {/* <div className=\"todo-list\">\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                {filteredTodoList.map((todo, index) => (\n                  <Draggable key={todo.id} draggableId={parseFloat(todo.id)} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={provided.draggableProps.style}\n                      >\n                        <TodoItem\n                          tagList={tagList}\n                          updateTodo={updateTodo}\n                          key={index}\n                          todo={todo}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        <Box p={2}>\n          <H2>New Drag and Drop Start From Here for testing</H2>\n        </Box>\n\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                {dragAbleItem.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <TodoItem\n                          tagList={tagList}\n                          updateTodo={updateTodo}\n                          key={index}\n                          todo={item}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div> */}\n    </StyledCard>\n  );\n};\n\nexport default TodoList;\n","import { Box, Icon, styled, TextField, useTheme } from \"@mui/material\";\nimport { useState } from \"react\";\nimport TodoList from \"./TodoList\";\n\nconst AppTodoRoot = styled(\"div\")(({ theme }) => ({\n  \"& .searchBoxHolder\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    height: \"calc(220px - 94px + 30px)\",\n    [theme.breakpoints.down(\"sm\")]: { height: \"calc(220px - 94px -16px + 30px)\" },\n  },\n  \"& .searchBox\": {\n    width: \"calc(100% - 60px)\",\n    [theme.breakpoints.down(\"sm\")]: { width: \"calc(100% - 32px)\" },\n  },\n  \"& .todoContent\": { marginTop: -94 },\n}));\n\nconst AppTodo = () => {\n  const [query, setQuery] = useState(\"\");\n  const handleQueryChange = (event) => setQuery(event.target.value);\n\n  const { palette } = useTheme();\n  const bgPrimary = palette.primary.main;\n\n  return (\n    <AppTodoRoot>\n      <Box height={220} sx={{ background: bgPrimary }}>\n        <div className=\"searchBoxHolder\">\n          <div className=\"searchBox\">\n            <TextField\n              fullWidth\n              name=\"query\"\n              value={query}\n              size=\"medium\"\n              variant=\"outlined\"\n              InputProps={{\n                startAdornment: <Icon sx={{ mr: \"12px\" }}>search</Icon>,\n                style: {\n                  outline: \"none\",\n                  borderRadius: 300,\n                  background: \"white\",\n                },\n              }}\n              onChange={handleQueryChange}\n            />\n          </div>\n        </div>\n      </Box>\n\n      <div className=\"todoContent\">\n        <TodoList query={query} />\n      </div>\n    </AppTodoRoot>\n  );\n};\n\nexport default AppTodo;\n","import axios from \"axios\";\n\nexport const getAllTodo = () => {\n  return axios.get(\"/api/todo/all\");\n};\n\nexport const getTodoById = (todoId) => {\n  return axios.get(\"/api/todo\", { data: todoId });\n};\n\nexport const reorderTodoList = (todoList) => {\n  return axios.post(\"/api/todo/reorder\", { todoList });\n};\n\nexport const addTodo = (todo) => {\n  return axios.post(\"/api/todo/add\", { todo });\n};\n\nexport const updateTodoById = (todo) => {\n  return axios.post(\"/api/todo/update\", { todo });\n};\n\nexport const deleteTodo = (todo) => {\n  return axios.post(\"/api/todo/delete\", { todo });\n};\n\n// tag management\nexport const getAllTodoTag = () => {\n  return axios.get(\"/api/todo/tag\");\n};\n\nexport const addNewTag = (tag) => {\n  return axios.post(\"/api/todo/tag/add\", { tag });\n};\n\nexport const deleteTag = (tag) => {\n  return axios.post(\"/api/todo/tag/delete\", { tag });\n};\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["FlexBox","styled","Box","display","alignItems","flexWrap","Link","flexGrow","StyledCard","Card","_ref","theme","margin","position","breakpoints","down","ContentBox","FlexBetween","paddingTop","paddingBottom","background","_ref2","query","navigate","useNavigate","tagList","setTagList","useState","isAlive","setIsAlive","todoList","setTodoList","filteredTodoList","setFilteredTodoList","getAllTodoAndTagList","useCallback","async","data","Promise","all","getAllTodo","getAllTodoTag","search","debounce","trim","toLowerCase","filter","todo","title","match","note","useEffect","filterTodoListByProperty","queryField","queryValue","list","filterTodoListByTag","tagId","tag","includes","dragAbleItem","setDragAbleItem","length","map","k","i","done","dueDate","id","concat","important","read","selected","starred","startDate","_jsx","className","children","_jsxs","MatxMenu","menuButton","IconButton","size","Icon","MenuItem","onClick","sx","textTransform","name","pr","Button","variant","color","AppTodoRoot","flexDirection","justifyContent","height","width","marginTop","AppTodo","setQuery","palette","useTheme","bgPrimary","primary","main","TextField","fullWidth","value","InputProps","startAdornment","mr","style","outline","borderRadius","onChange","event","target","TodoList","axios","get","getTodoById","todoId","reorderTodoList","post","addTodo","updateTodoById","deleteTodo","addNewTag","deleteTag","getListItemIconUtilityClass","slot","generateUtilityClass","generateUtilityClasses","getListItemTextUtilityClass","getMenuItemUtilityClass","_excluded","MenuItemRoot","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","_extends","typography","body1","textDecoration","minHeight","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","backgroundClip","backgroundColor","action","hover","menuItemClasses","mainChannel","selectedOpacity","alpha","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","spacing","marginBottom","inset","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","up","body2","fontSize","React","inProps","ref","useThemeProps","autoFocus","component","focusVisibleClassName","role","tabIndex","tabIndexProp","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","Provider","clsx"],"sourceRoot":""}