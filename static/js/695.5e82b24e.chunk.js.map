{"version":3,"file":"static/js/695.5e82b24e.chunk.js","mappings":"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","sources":["app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"sourcesContent":["import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport { styled } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst options = [\n  'None',\n  'Atria',\n  'Callisto',\n  'Dione',\n  'Ganymede',\n  'Hangouts Call',\n  'Luna',\n  'Oberon',\n  'Phobos',\n  'Pyxis',\n  'Sedna',\n  'Titania',\n  'Triton',\n  'Umbriel'\n];\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = useState(valueProp);\n  const radioGroupRef = useRef(null);\n\n  useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  function handleEntering() {\n    if (radioGroupRef.current !== null) {\n      radioGroupRef.current.focus();\n    }\n  }\n\n  const handleCancel = () => onClose();\n  const handleOk = () => onClose(value);\n\n  const handleChange = (_, newValue) => setValue(newValue);\n\n  return (\n    <Dialog\n      maxWidth=\"xs\"\n      disableEscapeKeyDown\n      TransitionProps={{ onExiting: handleEntering }}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"Ringtone\"\n          name=\"ringtone\"\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map((option) => (\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel}>\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n  width: '100%',\n  maxWidth: 360,\n  backgroundColor: theme.palette.background.paper,\n  '& .paper': { width: '80%', maxHeight: 435 }\n}));\n\nexport default function ConfirmationDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  function handleClickListItem() {\n    setOpen(true);\n  }\n\n  function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  }\n\n  return (\n    <DialogRoot>\n      <List component=\"div\" role=\"list\">\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Interruptions\" />\n        </ListItem>\n\n        <ListItem\n          button\n          divider\n          aria-controls=\"ringtone-menu\"\n          aria-label=\"Phone ringtone\"\n          onClick={handleClickListItem}\n          role=\"listitem\"\n        >\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\n        </ListItem>\n\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n        </ListItem>\n\n        <ConfirmationDialogRaw\n          keepMounted\n          open={open}\n          value={value}\n          className=\"paper\"\n          id=\"ringtone-menu\"\n          onClose={handleClose}\n        />\n      </List>\n    </DialogRoot>\n  );\n}\n","import CloseIcon from '@mui/icons-material/Close';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport MuiDialogActions from '@mui/material/DialogActions';\nimport MuiDialogContent from '@mui/material/DialogContent';\nimport MuiDialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material';\nimport { useState } from 'react';\n\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\n  margin: 0,\n  padding: theme.spacing(2),\n  '& .closeButton': {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n}));\n\nconst DialogTitle = (props) => {\n  const { children, onClose } = props;\n  return (\n    <DialogTitleRoot disableTypography>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className=\"closeButton\" onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitleRoot>\n  );\n};\n\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\n  '&.root': { padding: theme.spacing(2) }\n}));\n\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\n  '&.root': { margin: 0, padding: theme.spacing(1) }\n}));\n\nconst CustomizedDialogs = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Modal title\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </Typography>\n\n          <Typography gutterBottom>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\n          </Typography>\n\n          <Typography gutterBottom>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n            auctor fringilla.\n          </Typography>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CustomizedDialogs;\n","import { forwardRef, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Slide in alert dialog\n      </Button>\n\n      <Dialog\n        open={open}\n        keepMounted\n        onClose={handleClose}\n        TransitionComponent={Transition}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport TextField from '@mui/material/TextField';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nexport default function FormDialog() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open form dialog\n      </Button>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText>\n\n          <TextField\n            fullWidth\n            autoFocus\n            id=\"name\"\n            type=\"email\"\n            margin=\"dense\"\n            label=\"Email Address\"\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import CloseIcon from '@mui/icons-material/Close';\nimport { Box } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport { forwardRef, useState } from 'react';\nimport { useTheme } from '@mui/material';\nimport List from '@mui/material/List';\nimport Dialog from '@mui/material/Dialog';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Slide from '@mui/material/Slide';\nimport Toolbar from '@mui/material/Toolbar';\nimport { H6 } from 'app/components/Typography';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => setOpen(false);\n  const handleClickOpen = () => setOpen(true);\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open full-screen dialog\n      </Button>\n\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar sx={{ position: 'relative' }}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\n              <CloseIcon />\n            </IconButton>\n\n            <H6 sx={{ flex: 1, marginLeft: theme.spacing(2) }}>Sound</H6>\n\n            <Button color=\"inherit\" onClick={handleClose}>\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n\n        <List>\n          <ListItem>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n          </ListItem>\n        </List>\n      </Dialog>\n    </Box>\n  );\n}\n","import { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Switch from '@mui/material/Switch';\nimport { styled } from '@mui/material';\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n  '& form': {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'column',\n    width: 'fit-content'\n  },\n  '& .formControl': {\n    marginTop: theme.spacing(2),\n    minWidth: 120\n  },\n  '& .formControlLabel': {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nexport default function MaxWidthDialog() {\n  const [open, setOpen] = useState(false);\n  const [fullWidth, setFullWidth] = useState(true);\n  const [maxWidth, setMaxWidth] = useState('sm');\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n  function handleMaxWidthChange(event) {\n    setMaxWidth(event.target.value);\n  }\n  function handleFullWidthChange(event) {\n    setFullWidth(event.target.checked);\n  }\n\n  return (\n    <DialogRoot>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open max-width dialog\n      </Button>\n\n      <Dialog\n        open={open}\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            You can set my maximum width and whether to adapt or not.\n          </DialogContentText>\n\n          <form noValidate>\n            <FormControl className=\"formControl\">\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n              <Select\n                value={maxWidth}\n                onChange={handleMaxWidthChange}\n                inputProps={{ name: 'max-width', id: 'max-width' }}\n              >\n                <MenuItem value={false}>false</MenuItem>\n                <MenuItem value=\"xs\">xs</MenuItem>\n                <MenuItem value=\"sm\">sm</MenuItem>\n                <MenuItem value=\"md\">md</MenuItem>\n                <MenuItem value=\"lg\">lg</MenuItem>\n                <MenuItem value=\"xl\">xl</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControlLabel\n              className=\"formControlLabel\"\n              label=\"Full width\"\n              control={\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\n              }\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </DialogRoot>\n  );\n}\n","import { useState } from 'react';\nimport { Box, useTheme } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nexport default function ResponsiveDialog() {\n  const [open, setOpen] = useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open responsive dialog\n      </Button>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState } from 'react';\n\nexport default function AlertDialog() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import AddIcon from '@mui/icons-material/Add';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { Box } from '@mui/material';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport { blue } from '@mui/material/colors';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, ...other } = props;\n\n  function handleClose() {\n    onClose(selectedValue);\n  }\n  function handleListItemClick(value) {\n    onClose(value);\n  }\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {emails.map((email) => (\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n            <ListItemAvatar>\n              <Avatar sx={{ backgroundColor: blue[100], color: blue[600] }}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string,\n};\n\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('user02@gmail.com');\n\n  const handleClickOpen = () => setOpen(true);\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n      <br />\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n    </Box>\n  );\n}\n","import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/material';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport ConfirmationDialog from './ConfirmationDialog';\nimport CustomizedDialogs from './CustomizedDialog';\nimport AlertDialogSlide from './DialogTransition';\nimport FormDialog from './FormDialog';\nimport FullScreenDialog from './FullScreenDialog';\nimport MaxWidthDialog from './OptimalSizeDialog';\nimport ResponsiveDialog from './ResponsiveDialog';\nimport AlertDialog from './SimpleAlerts';\nimport SimpleDialogDemo from './SimpleDialog';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' }\n  }\n}));\n\nconst AppDialog = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Dialog' }]} />\n      </Box>\n\n      <Stack spacing={3}>\n        <SimpleCard title=\"simple Dialog\">\n          <SimpleDialogDemo />\n        </SimpleCard>\n\n        <SimpleCard title=\"alert dialog\">\n          <AlertDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"transition\">\n          <AlertDialogSlide />\n        </SimpleCard>\n\n        <SimpleCard title=\"form dialog\">\n          <FormDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"customized dialog\">\n          <CustomizedDialogs />\n        </SimpleCard>\n\n        <SimpleCard title=\"full-screen dialog\">\n          <FullScreenDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"optimized size dialog\">\n          <MaxWidthDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"responsive dialog\">\n          <ResponsiveDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"confirmation dialog\">\n          <ConfirmationDialog />\n        </SimpleCard>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default AppDialog;\n"],"names":["options","ConfirmationDialogRaw","props","onClose","valueProp","value","open","other","useState","setValue","radioGroupRef","useRef","useEffect","Dialog","maxWidth","disableEscapeKeyDown","TransitionProps","onExiting","current","focus","DialogTitle","id","DialogContent","dividers","RadioGroup","ref","name","onChange","_","newValue","map","option","FormControlLabel","control","Radio","label","DialogActions","Button","variant","color","onClick","DialogRoot","styled","width","backgroundColor","theme","palette","background","paper","maxHeight","ConfirmationDialog","React","setOpen","List","component","role","ListItem","button","divider","disabled","ListItemText","primary","secondary","keepMounted","className","DialogTitleRoot","MuiDialogTitle","margin","padding","spacing","position","right","top","grey","children","disableTypography","Typography","IconButton","Close","MuiDialogContent","MuiDialogActions","handleClose","gutterBottom","Transition","forwardRef","Slide","direction","AlertDialogSlide","TransitionComponent","DialogContentText","FormDialog","Box","TextField","fullWidth","autoFocus","type","FullScreenDialog","useTheme","fullScreen","AppBar","sx","Toolbar","edge","H6","flex","marginLeft","Divider","display","flexDirection","marginTop","minWidth","MaxWidthDialog","setFullWidth","setMaxWidth","noValidate","FormControl","InputLabel","htmlFor","Select","event","target","inputProps","MenuItem","Switch","checked","ResponsiveDialog","useMediaQuery","breakpoints","down","AlertDialog","emails","SimpleDialog","selectedValue","handleListItemClick","email","ListItemAvatar","Avatar","blue","Person","Add","SimpleDialogDemo","setSelectedValue","Container","marginBottom","routeSegments","path","Stack","title","CustomizedDialog"],"sourceRoot":""}