{"version":3,"file":"static/js/74.96929885.chunk.js","mappings":"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","sources":["app/views/material-kit/auto-complete/AsyncAutocomplete.jsx","app/views/material-kit/auto-complete/AutocompleteCombo.jsx","app/views/material-kit/auto-complete/BadgeAutocomplete.jsx","app/views/material-kit/auto-complete/AppAutoComplete.jsx"],"sourcesContent":["import { useState, useEffect, Fragment } from 'react';\nimport { Autocomplete, CircularProgress, styled, TextField } from '@mui/material';\nimport axios from 'axios';\n\nconst AutoComplete = styled(Autocomplete)(() => ({ width: 300 }));\n\nfunction sleep(delay = 0) {\n  return new Promise((resolve) => setTimeout(resolve, delay));\n}\n\nexport default function AsyncAutocomplete() {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const loading = open && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) return;\n\n    (async () => {\n      // *https://www.registers.service.gov.uk/registers/country/use-the-api*\n      const response = await axios.get(\n        'https://country.register.gov.uk/records.json?page-size=5000'\n      );\n      await sleep(3000); // For demo purposes.\n      const countries = await response.json();\n\n      if (active) {\n        setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  useEffect(() => {\n    if (!open) setOptions([]);\n  }, [open]);\n\n  return (\n    <AutoComplete\n      open={open}\n      options={options}\n      loading={loading}\n      id=\"asynchronous-demo\"\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n      getOptionLabel={(option) => option.name}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          fullWidth\n          variant=\"outlined\"\n          label=\"Asynchronous\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  );\n}\n","import { Autocomplete, styled, TextField } from '@mui/material';\nimport { createFilterOptions } from '@mui/material/Autocomplete';\nimport React, { Fragment } from 'react';\n\nconst AutoComplete = styled(Autocomplete)(() => ({\n  width: 300,\n  marginBottom: '16px',\n}));\n\nconst suggestions = [\n  { label: 'Afghanistan' },\n  { label: 'Aland Islands' },\n  { label: 'Albania' },\n  { label: 'Algeria' },\n  { label: 'American Samoa' },\n  { label: 'Andorra' },\n  { label: 'Angola' },\n  { label: 'Anguilla' },\n  { label: 'Antarctica' },\n  { label: 'Antigua and Barbuda' },\n  { label: 'Argentina' },\n  { label: 'Armenia' },\n  { label: 'Aruba' },\n  { label: 'Australia' },\n  { label: 'Austria' },\n  { label: 'Azerbaijan' },\n  { label: 'Bahamas' },\n  { label: 'Bahrain' },\n  { label: 'Bangladesh' },\n  { label: 'Barbados' },\n  { label: 'Belarus' },\n  { label: 'Belgium' },\n  { label: 'Belize' },\n  { label: 'Benin' },\n  { label: 'Bermuda' },\n  { label: 'Bhutan' },\n  { label: 'Bolivia, Plurinational State of' },\n  { label: 'Bonaire, Sint Eustatius and Saba' },\n  { label: 'Bosnia and Herzegovina' },\n  { label: 'Botswana' },\n  { label: 'Bouvet Island' },\n  { label: 'Brazil' },\n  { label: 'British Indian Ocean Territory' },\n  { label: 'Brunei Darussalam' },\n];\n\nconst filter = createFilterOptions();\n\nconst AutocompleteCombo = () => {\n  const [value, setValue] = React.useState(null);\n\n  const handleChange = (_, newValue) => {\n    if (newValue && newValue.inputValue) {\n      setValue({ label: newValue.inputValue });\n      return;\n    }\n    setValue(newValue);\n  };\n\n  const filterOptions = (options, params) => {\n    const filtered = filter(options, params);\n    if (params.inputValue !== '') {\n      filtered.push({ inputValue: params.inputValue, label: `Add \"${params.inputValue}\"` });\n    }\n    return filtered;\n  };\n\n  return (\n    <Fragment>\n      <AutoComplete\n        options={suggestions}\n        getOptionLabel={(option) => option.label}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" fullWidth />\n        )}\n      />\n\n      <AutoComplete\n        value={value}\n        options={suggestions}\n        onChange={handleChange}\n        filterOptions={filterOptions}\n        getOptionLabel={(option) => {\n          // e.g value selected with enter, right from the input\n          if (typeof option === 'string') {\n            return option;\n          }\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          return option.label;\n        }}\n        renderOption={(option) => option.label}\n        style={{ width: 300 }}\n        freeSolo\n        renderInput={(params) => (\n          <TextField {...params} label=\"Free solo with text demo\" variant=\"outlined\" fullWidth />\n        )}\n      />\n\n      <AutoComplete\n        options={suggestions}\n        getOptionLabel={(option) => option.label}\n        getOptionDisabled={(option) => option === suggestions[0] || option === suggestions[2]}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Disabled option\" variant=\"outlined\" fullWidth />\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default AutocompleteCombo;\n","import { Autocomplete, Chip, TextField } from '@mui/material';\nimport { Box, useTheme } from '@mui/material';\n\nconst BadgeAutocomplete = () => {\n  const theme = useTheme();\n\n  return (\n    <Box\n      sx={{\n        width: 500,\n        '& > * + *': {\n          marginTop: theme.spacing(3)\n        }\n      }}\n    >\n      <Autocomplete\n        multiple\n        id=\"tags-standard\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"standard\"\n            label=\"Multiple values\"\n            placeholder=\"Favorites\"\n            fullWidth\n          />\n        )}\n      />\n      <Autocomplete\n        multiple\n        id=\"tags-outlined\"\n        options={top100Films}\n        getOptionLabel={(option) => option.title}\n        defaultValue={[top100Films[13]]}\n        filterSelectedOptions\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            label=\"filterSelectedOptions\"\n            placeholder=\"Favorites\"\n            fullWidth\n          />\n        )}\n      />\n      <Autocomplete\n        multiple\n        id=\"tags-filled\"\n        options={top100Films.map((option) => option.title)}\n        defaultValue={[top100Films[13].title]}\n        freeSolo\n        renderTags={(value, getTagProps) =>\n          value.map((option, index) => (\n            <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n          ))\n        }\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"filled\"\n            label=\"freeSolo\"\n            placeholder=\"Favorites\"\n            fullWidth\n          />\n        )}\n      />\n    </Box>\n  );\n};\n\nexport default BadgeAutocomplete;\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'Léon: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964\n  },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL·E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Amélie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 }\n];\n","import { Box, styled } from '@mui/material';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport AsyncAutocomplete from './AsyncAutocomplete';\nimport AutocompleteCombo from './AutocompleteCombo';\nimport BadgeAutocomplete from './BadgeAutocomplete';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst AppAutoComplete = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Autocomplete' }]}\n        />\n      </Box>\n\n      <SimpleCard title=\"autocomplete combo\">\n        <AutocompleteCombo />\n      </SimpleCard>\n\n      <Box py=\"12px\" />\n\n      <SimpleCard title=\"Asyncronous Autocomplete\">\n        <AsyncAutocomplete />\n      </SimpleCard>\n\n      <Box py=\"12px\" />\n\n      <SimpleCard title=\"Asyncronous Autocomplete\">\n        <BadgeAutocomplete />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AppAutoComplete;\n"],"names":["AutoComplete","styled","Autocomplete","width","sleep","delay","Promise","resolve","setTimeout","AsyncAutocomplete","useState","open","setOpen","options","setOptions","loading","length","useEffect","active","axios","response","json","countries","Object","keys","map","key","item","id","onOpen","onClose","getOptionLabel","option","name","renderInput","params","TextField","fullWidth","variant","label","InputProps","endAdornment","Fragment","CircularProgress","color","size","marginBottom","suggestions","filter","createFilterOptions","React","value","setValue","onChange","_","newValue","inputValue","filterOptions","filtered","push","renderOption","style","freeSolo","getOptionDisabled","theme","useTheme","Box","sx","marginTop","spacing","multiple","top100Films","title","defaultValue","placeholder","filterSelectedOptions","renderTags","getTagProps","index","Chip","year","Container","margin","breakpoints","down","className","routeSegments","path","py"],"sourceRoot":""}