{"version":3,"file":"static/js/2679.30eb8a6f.chunk.js","mappings":"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","sources":["app/hooks/useAuth.js","app/views/sessions/JwtLogin.jsx","../node_modules/@mui/material/colors/amber.js"],"sourcesContent":["// import AuthContext from \"../contexts/JWTAuthContext\";\r\nimport AuthContext from \"../contexts/FirebaseAuthContext\";\r\n// import AuthContext from \"../contexts/Auth0Context\";\r\nimport { useContext } from \"react\";\r\n\r\nconst useAuth = () => useContext(AuthContext);\r\n\r\nexport default useAuth;\r\n","import { LoadingButton } from \"@mui/lab\";\r\nimport { Card, Checkbox, Grid, TextField } from \"@mui/material\";\r\nimport { Box, styled, useTheme } from \"@mui/material\";\r\nimport { Paragraph } from \"../../components/Typography\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport { Formik } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\n// import ToastNotification from '../../contexts/ToastNotification';\r\nimport * as Yup from \"yup\";\r\nimport { useAlert } from \"../../contexts/AlertContext\";\r\nimport { amber, green } from \"@mui/material/colors\";\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport { fireStore } from \"./../../../config\";\r\nimport { jsonToString } from \"../../utils/utils\";\r\n\r\nconst ContentRoot = styled(\"div\")(({ theme }) => ({\r\n  \"& .icon\": { fontSize: 20 },\r\n  \"& .success\": { backgroundColor: green[600] },\r\n  \"& .warning\": { backgroundColor: amber[700] },\r\n  \"& .error\": { backgroundColor: theme.palette.error.main },\r\n  \"& .info\": { backgroundColor: theme.palette.primary.main },\r\n  \"& .iconVariant\": { opacity: 0.9, marginRight: theme.spacing(1) },\r\n  \"& .message\": { display: \"flex\", alignItems: \"center\" },\r\n  \"& .margin\": { margin: theme.spacing(1) }\r\n}));\r\n\r\nconst FlexBox = styled(Box)(() => ({ display: \"flex\", alignItems: \"center\" }));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: \"center\" }));\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: \"100%\",\r\n  padding: \"32px\",\r\n  position: \"relative\",\r\n  background: \"rgba(0, 0, 0, 0.01)\"\r\n}));\r\n\r\nconst JWTRoot = styled(JustifyBox)(() => ({\r\n  background: \"#1A2038\",\r\n  minHeight: \"100% !important\",\r\n  \"& .card\": {\r\n    maxWidth: 800,\r\n    minHeight: 400,\r\n    margin: \"1rem\",\r\n    display: \"flex\",\r\n    borderRadius: 12,\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n\r\n// inital login credentials\r\n// const initialValues = {\r\n//   email: 'jason@ui-lib.com',\r\n//   password: 'dummyPass',\r\n//   remember: true\r\n// };\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n  remember: true\r\n};\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(6, \"Password must be 6 character length\")\r\n    .required(\"Password is required!\"),\r\n  email: Yup.string().email(\"Invalid Email address\").required(\"Email is required!\")\r\n});\r\n\r\nconst JwtLogin = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const { showAlert } = useAlert();\r\n  const { login } = useAuth();\r\n\r\n  // const handleFormSubmit = async (values) => {\r\n  //   console.log('called login:');\r\n  //   setLoading(true);\r\n  //   try {\r\n  //     await login(values.email, values.password);\r\n  //     navigate('/');\r\n  //   } catch (e) {\r\n  //     setLoading(false);\r\n  //   }\r\n  // };\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      // Use Firebase signInWithEmail function\r\n      const res = await login(values.email, values.password);\r\n      // console.log('res', res);\r\n      await fetchCurrentUser(res.user.uid);\r\n      showAlert(\"success\", \"User Logged in successfully.\");\r\n      await navigate(\"/dashboard/default\");\r\n    } catch (e) {\r\n      setLoading(false);\r\n      navigate(\"/\");\r\n      showAlert(\"error\", \"User Email or Password is Wrong.\");\r\n      // Handle any authentication errors\r\n      console.error(\"Firebase authentication error:\", e);\r\n    }\r\n  };\r\n\r\n  const fetchCurrentUser = async (user_id) => {\r\n    try {\r\n      setLoading(true);\r\n      const Query = query(collection(fireStore, \"users\"), where(\"user_id\", \"==\", user_id));\r\n      const response = await getDocs(Query);\r\n      const dataFromFirebase = response.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      sessionStorage.setItem(\"userData\", JSON.stringify(dataFromFirebase[0]));\r\n      // console.log('dataFromFirebase', dataFromFirebase, 'response', response);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <JWTRoot>\r\n      <Card className=\"card\">\r\n        <Grid container>\r\n          <Grid item sm={6} xs={12}>\r\n            <JustifyBox p={4} height=\"100%\" sx={{ minWidth: 320 }}>\r\n              <img src=\"/assets/images/illustrations/dreamer.svg\" width=\"100%\" alt=\"\" />\r\n            </JustifyBox>\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <ContentBox>\r\n              <Formik\r\n                onSubmit={handleFormSubmit}\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n              >\r\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      helperText={touched.email && errors.email}\r\n                      error={Boolean(errors.email && touched.email)}\r\n                      sx={{ mb: 3 }}\r\n                    />\r\n\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      label=\"Password\"\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      helperText={touched.password && errors.password}\r\n                      error={Boolean(errors.password && touched.password)}\r\n                      sx={{ mb: 1.5 }}\r\n                    />\r\n\r\n                    <FlexBox justifyContent=\"space-between\">\r\n                      <FlexBox gap={1}>\r\n                        <Checkbox\r\n                          size=\"small\"\r\n                          name=\"remember\"\r\n                          onChange={handleChange}\r\n                          checked={values.remember}\r\n                          sx={{ padding: 0 }}\r\n                        />\r\n\r\n                        <Paragraph>Remember Me</Paragraph>\r\n                      </FlexBox>\r\n\r\n                      <NavLink\r\n                        to=\"/session/forgot-password\"\r\n                        style={{ color: theme.palette.primary.main }}\r\n                      >\r\n                        Forgot password?\r\n                      </NavLink>\r\n                    </FlexBox>\r\n\r\n                    <LoadingButton\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      loading={loading}\r\n                      variant=\"contained\"\r\n                      sx={{ my: 2 }}\r\n                    >\r\n                      Login\r\n                    </LoadingButton>\r\n                    {/* <Paragraph>\r\n                      Don't have an account?\r\n                      <NavLink\r\n                        to=\"/session/signup\"\r\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}\r\n                      >\r\n                        Register\r\n                      </NavLink>\r\n                    </Paragraph> */}\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n            </ContentBox>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </JWTRoot>\r\n  );\r\n};\r\n\r\nexport default JwtLogin;\r\n","const amber = {\n  50: '#fff8e1',\n  100: '#ffecb3',\n  200: '#ffe082',\n  300: '#ffd54f',\n  400: '#ffca28',\n  500: '#ffc107',\n  600: '#ffb300',\n  700: '#ffa000',\n  800: '#ff8f00',\n  900: '#ff6f00',\n  A100: '#ffe57f',\n  A200: '#ffd740',\n  A400: '#ffc400',\n  A700: '#ffab00'\n};\nexport default amber;"],"names":["useAuth","useContext","AuthContext","styled","_ref","theme","fontSize","backgroundColor","green","amber","palette","error","main","primary","opacity","marginRight","spacing","display","alignItems","margin","FlexBox","Box","JustifyBox","justifyContent","ContentBox","height","padding","position","background","JWTRoot","minHeight","maxWidth","borderRadius","initialValues","email","password","remember","validationSchema","Yup","shape","min","required","JwtLogin","useTheme","navigate","useNavigate","loading","setLoading","useState","showAlert","useAlert","login","fetchCurrentUser","async","Query","query","collection","fireStore","where","user_id","dataFromFirebase","getDocs","docs","map","doc","id","data","sessionStorage","setItem","JSON","stringify","console","_jsx","children","Card","className","_jsxs","Grid","container","item","sm","xs","p","sx","minWidth","src","width","alt","Formik","onSubmit","res","values","user","uid","e","_ref2","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","type","name","label","variant","onBlur","value","onChange","helperText","Boolean","mb","gap","Checkbox","checked","Paragraph","NavLink","to","style","color","LoadingButton","my","A100","A200","A400","A700"],"sourceRoot":""}