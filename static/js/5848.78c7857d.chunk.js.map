{"version":3,"file":"static/js/5848.78c7857d.chunk.js","mappings":"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","sources":["app/components/MatxSidenav/MatxSidenavContainer.jsx","app/components/MatxSidenav/MatxSidenavContent.jsx","app/views/inbox/InboxMessagList.jsx","app/views/inbox/InboxComposeDialog.jsx","app/views/inbox/InboxSidenav.jsx","app/views/inbox/InboxTopbar.jsx","app/views/inbox/AppInbox.jsx","app/views/inbox/InboxService.js"],"sourcesContent":["import { styled } from \"@mui/material\";\n\nconst Container = styled(\"div\")(() => ({\n  height: \"100%\",\n  display: \"flex\",\n  position: \"relative\",\n}));\n\nconst MatxSidenavContainer = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nexport default MatxSidenavContainer;\n","import { styled } from \"@mui/material\";\n\nconst Content = styled(\"div\")(() => ({\n  flexGrow: 1,\n  height: \"100%\",\n  position: \"relative\",\n}));\n\nconst MatxSidenavContent = ({ children }) => {\n  return <Content>{children}</Content>;\n};\n\nexport default MatxSidenavContent;\n","import { Avatar, Box, Checkbox, Icon, IconButton, MenuItem, styled, useTheme } from \"@mui/material\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport { MatxMenu } from \"app/components\";\r\nimport { FlexBetween, FlexBox } from \"app/components/FlexBox\";\r\nimport { H5, Paragraph, Small } from \"app/components/Typography\";\r\nimport { getTimeDifference } from \"app/utils/utils\";\r\nimport { format } from \"date-fns\";\r\nimport HtmlReactParser from \"html-react-parser\";\r\nimport { Fragment, useState } from \"react\";\r\n\r\nconst ContentBox = styled(FlexBetween)({\r\n  flexWrap: 1,\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n});\r\n\r\nconst StyledH5 = styled(H5)({ marginLeft: \"4px\", fontWeight: \"500\" });\r\n\r\nconst StyledItem = styled(MenuItem)({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  \"& .icon\": { marginRight: \"16px\" },\r\n});\r\n\r\nconst InboxMessageList = ({ messageList, handleCheckboxSelection }) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const toggleExpansionPanel = (index) => {\r\n    if (index === expanded) setExpanded(false);\r\n    else setExpanded(index);\r\n  };\r\n\r\n  const { palette } = useTheme();\r\n  const textMuted = palette.text.secondary;\r\n\r\n  return (\r\n    <Box mx=\"4px\" mb=\"4px\">\r\n      {messageList.map((message, index) => (\r\n        <Accordion key={message.id} expanded={expanded === index} elevation={3}>\r\n          <AccordionSummary sx={{ p: 0, pl: 1, pr: 3 }}>\r\n            <FlexBox alignItems=\"center\" px={1} width=\"100%\">\r\n              {expanded !== index && (\r\n                <Fragment>\r\n                  <Checkbox\r\n                    checked={message.selected}\r\n                    onChange={(event) => handleCheckboxSelection(event, index)}\r\n                    color=\"secondary\"\r\n                  />\r\n                  <IconButton>\r\n                    <Icon>star_border</Icon>\r\n                  </IconButton>\r\n                </Fragment>\r\n              )}\r\n\r\n              <ContentBox onClick={() => toggleExpansionPanel(index)}>\r\n                {expanded === index && (\r\n                  <FlexBetween ml=\"12px\">\r\n                    <Avatar src={message.sender.photo} />\r\n\r\n                    <Box ml={1}>\r\n                      <StyledH5>{message.sender.name}</StyledH5>\r\n                      <Small sx={{ color: textMuted }}>\r\n                        {format(new Date(message.date).getTime(), \"MMMM dd, yyyy\")}\r\n                      </Small>\r\n                    </Box>\r\n                  </FlexBetween>\r\n                )}\r\n\r\n                {expanded !== index && (\r\n                  <StyledH5 sx={{ fontSize: \"14px\", color: textMuted }}>\r\n                    {message.sender.name}\r\n                  </StyledH5>\r\n                )}\r\n\r\n                <Paragraph>{message.subject}</Paragraph>\r\n                <Small sx={{ color: textMuted }}>\r\n                  {getTimeDifference(new Date(message.date))} ago\r\n                </Small>\r\n              </ContentBox>\r\n\r\n              <MatxMenu\r\n                menuButton={\r\n                  <IconButton>\r\n                    <Icon>more_vert</Icon>\r\n                  </IconButton>\r\n                }\r\n              >\r\n                <StyledItem>\r\n                  <Icon className=\"icon\">reply</Icon> Reply\r\n                </StyledItem>\r\n\r\n                <StyledItem>\r\n                  <Icon className=\"icon\">archive</Icon> Archive\r\n                </StyledItem>\r\n\r\n                <StyledItem>\r\n                  <Icon className=\"icon\">delete</Icon> Delete\r\n                </StyledItem>\r\n              </MatxMenu>\r\n            </FlexBox>\r\n          </AccordionSummary>\r\n\r\n          <AccordionDetails>\r\n            <div>{HtmlReactParser(message.message)}</div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default InboxMessageList;\r\n","import { Box, Button, Dialog, Fab, Icon, IconButton, styled, TextField } from \"@mui/material\";\nimport { Paragraph } from \"app/components/Typography\";\nimport { Formik } from \"formik\";\n\nconst FlexBox = styled(Box)({\n  display: \"flex\",\n  alignItems: \"center\",\n});\n\nconst FormController = styled(\"div\")({\n  flexWrap: 1,\n  display: \"flex\",\n  marginBottom: \"16px\",\n  justifyContent: \"space-between\",\n  \"& input\": { display: \"none\" },\n});\n\nconst InboxComposeDialog = ({ open, handleClose }) => {\n  const initialValues = {\n    to: \"\",\n    subject: \"\",\n    content: \"\",\n    attachment: null,\n  };\n\n  const handleFormSubmit = (values) => {\n    console.log(values);\n\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose} maxWidth=\"md\" fullWidth={true}>\n      <Box p={3}>\n        <Formik initialValues={initialValues} onSubmit={handleFormSubmit}>\n          {({ values, handleBlur, handleChange, handleSubmit, setFieldValue }) => {\n            return (\n              <form onSubmit={handleSubmit}>\n                <TextField\n                  fullWidth\n                  name=\"to\"\n                  label=\"To\"\n                  type=\"email\"\n                  value={values.to}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  sx={{ mb: 2 }}\n                />\n\n                <TextField\n                  fullWidth\n                  type=\"text\"\n                  name=\"subject\"\n                  label=\"Subject\"\n                  onBlur={handleBlur}\n                  value={values.subject}\n                  onChange={handleChange}\n                  sx={{ mb: 2 }}\n                />\n\n                <FormController>\n                  <Button onClick={handleClose}>Cancel</Button>\n\n                  <FlexBox>\n                    {values.attachment && (\n                      <Paragraph sx={{ mr: 3 }}>{values.attachment.name}</Paragraph>\n                    )}\n\n                    <label htmlFor=\"attachment\">\n                      <IconButton sx={{ mr: 1 }} component=\"span\">\n                        <Icon>attachment</Icon>\n                      </IconButton>\n                    </label>\n\n                    <input\n                      type=\"file\"\n                      id=\"attachment\"\n                      onChange={(e) => setFieldValue(\"attachment\", e.target.files[0])}\n                    />\n\n                    <Fab size=\"medium\" color=\"secondary\" type=\"submit\">\n                      <Icon>send</Icon>\n                    </Fab>\n                  </FlexBox>\n                </FormController>\n              </form>\n            );\n          }}\n        </Formik>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default InboxComposeDialog;\n","import { Button, Divider, Icon, ListItem, ListItemIcon, ListItemText, styled } from \"@mui/material\";\nimport { useState } from \"react\";\nimport InboxComposeDialog from \"./InboxComposeDialog\";\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  marginRight: \"16px\",\n  background: theme.palette.background.default,\n}));\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  width: \"100%\",\n  color: \"#fff\",\n  paddingTop: \"8px\",\n  paddingBottom: \"8px\",\n  background: theme.palette.error.main,\n}));\n\nconst InboxSidenav = () => {\n  const [open, setOpen] = useState(false);\n  const handleClose = () => setOpen(false);\n\n  const list = [\n    { icon: \"inbox\", title: \"Inbox\" },\n    { icon: \"folder_special\", title: \"Starred\" },\n    { icon: \"error\", title: \"Spam\" },\n    { icon: \"send\", title: \"Sent\" },\n  ];\n\n  const social = [\n    { icon: \"people\", title: \"Social\" },\n    { icon: \"local_offer\", title: \"Promotions\" },\n    { icon: \"forums\", title: \"Forums\" },\n  ];\n\n  return (\n    <Container>\n      <StyledButton variant=\"contained\" onClick={() => setOpen(true)}>\n        Compose\n      </StyledButton>\n\n      {list.map((item, index) => (\n        <ListItem button key={index}>\n          <ListItemIcon>\n            <Icon>{item.icon}</Icon>\n          </ListItemIcon>\n\n          <ListItemText primary={item.title} />\n        </ListItem>\n      ))}\n\n      <Divider />\n\n      {social.map((item, index) => (\n        <ListItem button key={index}>\n          <ListItemIcon>\n            <Icon color=\"primary\">{item.icon}</Icon>\n          </ListItemIcon>\n\n          <ListItemText primary={item.title} />\n        </ListItem>\n      ))}\n\n      <InboxComposeDialog open={open} handleClose={handleClose} />\n    </Container>\n  );\n};\n\nexport default InboxSidenav;\n","import { Box, Checkbox, FormControlLabel, Hidden, Icon, IconButton, styled } from \"@mui/material\";\n\nconst Container = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  position: \"relative\",\n  borderTopLeftRadius: 4,\n  borderTopRightRadius: 4,\n  background: theme.palette.primary.main,\n}));\n\nconst StyledIcon = styled(Icon)({ color: \"#fff\" });\n\nconst InboxTopBar = (props) => {\n  const { toggleSidenav, handleMasterCheckbox, masterCheckbox } = props;\n\n  return (\n    <Container py=\"4px\" mx=\"4px\">\n      <Hidden smUp>\n        <IconButton onClick={toggleSidenav}>\n          <StyledIcon>short_text</StyledIcon>\n        </IconButton>\n      </Hidden>\n\n      <FormControlLabel\n        label=\"All\"\n        sx={{ color: \"#fff\", marginLeft: 2 }}\n        control={\n          <Checkbox checked={masterCheckbox} onChange={handleMasterCheckbox} color=\"secondary\" />\n        }\n      />\n\n      <IconButton size=\"large\">\n        <StyledIcon>delete</StyledIcon>\n      </IconButton>\n\n      <IconButton size=\"large\">\n        <StyledIcon>folder_special</StyledIcon>\n      </IconButton>\n\n      <IconButton size=\"large\">\n        <StyledIcon>archive</StyledIcon>\n      </IconButton>\n\n      <IconButton size=\"large\">\n        <StyledIcon>error</StyledIcon>\n      </IconButton>\n    </Container>\n  );\n};\n\nexport default InboxTopBar;\n","import { Box, styled, useMediaQuery, useTheme } from '@mui/material';\nimport MatxSidenav from 'app/components/MatxSidenav/MatxSidenav';\nimport MatxSidenavContainer from 'app/components/MatxSidenav/MatxSidenavContainer';\nimport MatxSidenavContent from 'app/components/MatxSidenav/MatxSidenavContent';\nimport { useEffect, useState } from 'react';\nimport InboxMessageList from './InboxMessagList';\nimport { getAllMessage } from './InboxService';\nimport InboxSidenav from './InboxSidenav';\nimport InboxTopBar from './InboxTopbar';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  display: 'flex',\n  [theme.breakpoints.down('sm')]: { margin: '16px' }\n}));\n\nconst AppInbox = () => {\n  const [isAlive, setIsAlive] = useState(true);\n  const [open, setOpen] = useState(false);\n  const [masterCheckbox, setMasterCheckbox] = useState(false);\n  const [messageList, setMessageList] = useState([]);\n\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const toggleSidenav = () => setOpen(!open);\n\n  const handleMasterCheckbox = (event) => {\n    let temp = messageList;\n    let isChecked = event.target.checked;\n    if (isChecked) {\n      temp.map((message) => {\n        message.selected = true;\n        return message;\n      });\n    } else {\n      temp.map((message) => {\n        message.selected = false;\n        return message;\n      });\n    }\n    setMessageList(temp);\n    setMasterCheckbox(isChecked);\n  };\n\n  const handleCheckboxSelection = (event, index) => {\n    event.persist();\n    let temp = messageList;\n    temp[index].selected = event.target.checked;\n    setMessageList([...temp]);\n  };\n\n  useEffect(() => {\n    if (isMobile) setOpen(false);\n  }, [isMobile]);\n\n  useEffect(() => {\n    getAllMessage().then(({ data }) => {\n      if (isAlive) setMessageList(data);\n    });\n  }, [isAlive]);\n\n  useEffect(() => {\n    return () => setIsAlive(false);\n  }, []);\n\n  return (\n    <Container>\n      <Box width=\"100%\">\n        <MatxSidenavContainer>\n          <MatxSidenav width=\"220px\" toggleSidenav={toggleSidenav} open={open}>\n            <InboxSidenav />\n          </MatxSidenav>\n\n          <MatxSidenavContent>\n            <InboxTopBar\n              toggleSidenav={toggleSidenav}\n              masterCheckbox={masterCheckbox}\n              handleMasterCheckbox={handleMasterCheckbox}\n            />\n\n            <InboxMessageList\n              messageList={messageList}\n              handleCheckboxSelection={handleCheckboxSelection}\n            />\n          </MatxSidenavContent>\n        </MatxSidenavContainer>\n      </Box>\n    </Container>\n  );\n};\n\nexport default AppInbox;\n","import axios from \"axios\";\n\nexport const getAllMessage = () => {\n  return axios.get(\"/api/inbox/all\");\n};\n\nexport const getMessageById = (id) => {\n  return axios.get(\"/api/inbox\", { data: id });\n};\n\nexport const deleteMessage = (message) => {\n  return axios.post(\"/api/inbox/delete\", message);\n};\n\nexport const addNewMessage = (message) => {\n  return axios.post(\"/api/inbox/add\", message);\n};\n\nexport const updateMessage = (message) => {\n  return axios.post(\"/api/inbox/update\", message);\n};\n"],"names":["Container","styled","height","display","position","_ref","children","_jsx","Content","flexGrow","ContentBox","FlexBetween","flexWrap","width","StyledH5","H5","marginLeft","fontWeight","StyledItem","MenuItem","alignItems","marginRight","messageList","handleCheckboxSelection","expanded","setExpanded","useState","palette","useTheme","textMuted","text","secondary","Box","mx","mb","map","message","index","_jsxs","Accordion","elevation","AccordionSummary","sx","p","pl","pr","FlexBox","px","Fragment","Checkbox","checked","selected","onChange","event","color","IconButton","Icon","onClick","toggleExpansionPanel","ml","Avatar","src","sender","photo","name","Small","format","Date","date","getTime","fontSize","Paragraph","subject","getTimeDifference","MatxMenu","menuButton","className","AccordionDetails","HtmlReactParser","id","FormController","marginBottom","justifyContent","open","handleClose","Dialog","onClose","maxWidth","fullWidth","Formik","initialValues","to","content","attachment","onSubmit","values","console","log","_ref2","handleBlur","handleChange","handleSubmit","setFieldValue","TextField","label","type","value","onBlur","Button","mr","htmlFor","component","e","target","files","Fab","size","theme","background","default","StyledButton","paddingTop","paddingBottom","error","main","InboxSidenav","setOpen","variant","icon","title","item","ListItem","button","ListItemIcon","ListItemText","primary","Divider","InboxComposeDialog","borderTopLeftRadius","borderTopRightRadius","StyledIcon","props","toggleSidenav","handleMasterCheckbox","masterCheckbox","py","Hidden","smUp","FormControlLabel","control","margin","breakpoints","down","AppInbox","isAlive","setIsAlive","setMasterCheckbox","setMessageList","isMobile","useMediaQuery","useEffect","axios","get","then","data","MatxSidenavContainer","MatxSidenav","MatxSidenavContent","InboxTopBar","temp","isChecked","InboxMessageList","persist"],"sourceRoot":""}