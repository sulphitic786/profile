{"version":3,"file":"static/js/1557.e5e4324b.chunk.js","mappings":"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","sources":["app/views/forms/BasicForm.jsx","app/views/material-kit/forms/SimpleForm.jsx"],"sourcesContent":["import { Box, Card, styled } from \"@mui/material\";\nimport { Breadcrumb } from \"app/components\";\nimport SimpleForm from \"../material-kit/forms/SimpleForm\";\n\n// styled component\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst BasicForm = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Forms\", path: \"/forms\" }, { name: \"Basic\" }]} />\n      </Box>\n\n      <Card sx={{ px: 3, pt: 1, pb: 2 }}>\n        <SimpleForm />\n      </Card>\n    </Container>\n  );\n};\n\nexport default BasicForm;\n","import { DatePicker } from \"@mui/lab\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Icon,\r\n  Radio,\r\n  RadioGroup,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport { Span } from \"app/components/Typography\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\n\r\nconst TextField = styled(TextValidator)(() => ({\r\n  width: \"100%\",\r\n  marginBottom: \"16px\",\r\n}));\r\n\r\nconst SimpleForm = () => {\r\n  const [state, setState] = useState({ date: new Date() });\r\n\r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", (value) => {\r\n      if (value !== state.password) return false;\r\n\r\n      return true;\r\n    });\r\n    return () => ValidatorForm.removeValidationRule(\"isPasswordMatch\");\r\n  }, [state.password]);\r\n\r\n  const handleSubmit = (event) => {\r\n    // console.log(\"submitted\");\r\n    // console.log(event);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setState({ ...state, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleDateChange = (date) => setState({ ...state, date });\r\n\r\n  const {\r\n    username,\r\n    firstName,\r\n    creditCard,\r\n    mobile,\r\n    password,\r\n    confirmPassword,\r\n    gender,\r\n    date,\r\n    email,\r\n  } = state;\r\n\r\n  return (\r\n    <div>\r\n      <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n        <Grid container spacing={6}>\r\n          <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"standard-basic\"\r\n              value={username || \"\"}\r\n              onChange={handleChange}\r\n              errorMessages={[\"this field is required\"]}\r\n              label=\"Username (Min length 4, Max length 9)\"\r\n              validators={[\"required\", \"minStringLength: 4\", \"maxStringLength: 9\"]}\r\n            />\r\n\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              label=\"First Name\"\r\n              onChange={handleChange}\r\n              value={firstName || \"\"}\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"this field is required\"]}\r\n            />\r\n\r\n            <TextField\r\n              type=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              value={email || \"\"}\r\n              onChange={handleChange}\r\n              validators={[\"required\", \"isEmail\"]}\r\n              errorMessages={[\"this field is required\", \"email is not valid\"]}\r\n            />\r\n\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                value={date}\r\n                onChange={handleDateChange}\r\n                renderInput={(props) => (\r\n                  <TextField\r\n                    {...props}\r\n                    label=\"Date picker\"\r\n                    id=\"mui-pickers-date\"\r\n                    sx={{ mb: 2, width: \"100%\" }}\r\n                  />\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n\r\n            <TextField\r\n              sx={{ mb: 4 }}\r\n              type=\"number\"\r\n              name=\"creditCard\"\r\n              label=\"Credit Card\"\r\n              onChange={handleChange}\r\n              value={creditCard || \"\"}\r\n              errorMessages={[\"this field is required\"]}\r\n              validators={[\"required\", \"minStringLength:16\", \"maxStringLength: 16\"]}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"mobile\"\r\n              value={mobile || \"\"}\r\n              label=\"Mobile Nubmer\"\r\n              onChange={handleChange}\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"this field is required\"]}\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              value={password || \"\"}\r\n              onChange={handleChange}\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"this field is required\"]}\r\n            />\r\n            <TextField\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              onChange={handleChange}\r\n              label=\"Confirm Password\"\r\n              value={confirmPassword || \"\"}\r\n              validators={[\"required\", \"isPasswordMatch\"]}\r\n              errorMessages={[\"this field is required\", \"password didn't match\"]}\r\n            />\r\n            <RadioGroup\r\n              row\r\n              name=\"gender\"\r\n              sx={{ mb: 2 }}\r\n              value={gender || \"\"}\r\n              onChange={handleChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Male\"\r\n                label=\"Male\"\r\n                labelPlacement=\"end\"\r\n                control={<Radio color=\"secondary\" />}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"Female\"\r\n                label=\"Female\"\r\n                labelPlacement=\"end\"\r\n                control={<Radio color=\"secondary\" />}\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"Others\"\r\n                label=\"Others\"\r\n                labelPlacement=\"end\"\r\n                control={<Radio color=\"secondary\" />}\r\n              />\r\n            </RadioGroup>\r\n\r\n            <FormControlLabel\r\n              control={<Checkbox />}\r\n              label=\"I have read and agree to the terms of service.\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n          <Icon>send</Icon>\r\n          <Span sx={{ pl: 1, textTransform: \"capitalize\" }}>Submit</Span>\r\n        </Button>\r\n      </ValidatorForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleForm;\r\n"],"names":["Container","styled","_ref","theme","margin","breakpoints","down","marginBottom","BasicForm","_jsxs","children","_jsx","Box","className","Breadcrumb","routeSegments","name","path","Card","sx","px","pt","pb","SimpleForm","TextField","TextValidator","width","state","setState","useState","date","Date","useEffect","ValidatorForm","addValidationRule","value","password","removeValidationRule","handleChange","event","persist","target","username","firstName","creditCard","mobile","confirmPassword","gender","email","onSubmit","onError","Grid","container","spacing","item","lg","md","sm","xs","mt","type","id","onChange","errorMessages","label","validators","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","props","mb","RadioGroup","row","FormControlLabel","labelPlacement","control","Radio","color","Checkbox","Button","variant","Icon","Span","pl","textTransform"],"sourceRoot":""}