{"version":3,"file":"static/js/4242.bf690b4b.chunk.js","mappings":"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","sources":["app/components/data-table/TableHead.jsx","app/components/data-table/TableToolbar.jsx","app/components/data-table/utils.js","app/hooks/useTable.js","../node_modules/@mui/icons-material/esm/Done.js","app/views/pages/orders/OrderList.jsx","../node_modules/@mui/icons-material/esm/Clear.js"],"sourcesContent":["import { Checkbox, TableCell, TableRow, TableSortLabel } from \"@mui/material\";\nimport MuiTableHead from \"@mui/material/TableHead\";\n\nconst TableHead = (props) => {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells } =\n    props;\n\n  const createSortHandler = (property) => (event) => onRequestSort(event, property);\n\n  return (\n    <MuiTableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            onChange={onSelectAllClick}\n            checked={rowCount > 0 && numSelected === rowCount}\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n          />\n        </TableCell>\n\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align}\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              onClick={createSortHandler(headCell.id)}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n            >\n              {headCell.label}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </MuiTableHead>\n  );\n};\n\n// TableHead.propTypes = {\n//   numSelected: PropTypes.number.isRequired,\n//   onRequestSort: PropTypes.func.isRequired,\n//   onSelectAllClick: PropTypes.func.isRequired,\n//   order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n//   orderBy: PropTypes.string.isRequired,\n//   rowCount: PropTypes.number.isRequired,\n// };\n\nexport default TableHead;\n","import { Delete, FilterList } from \"@mui/icons-material\";\nimport { alpha, IconButton, Toolbar, Tooltip, Typography } from \"@mui/material\";\n\nconst TableToolbar = ({ numSelected, title }) => {\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography sx={{ flex: \"1 1 100%\" }} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography sx={{ flex: \"1 1 100%\" }} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          {title}\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <Delete />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterList />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nexport default TableToolbar;\n","function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) return -1;\n  if (b[orderBy] > a[orderBy]) return 1;\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  if (order === \"desc\") return (a, b) => descendingComparator(a, b, orderBy);\n  else return (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport { stableSort, getComparator, descendingComparator };\n","import { useState } from \"react\";\n\nconst useTable = ({ defaultOrderBy = \"name\" }) => {\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState(\"asc\");\n  const [selected, setSelected] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [orderBy, setOrderBy] = useState(defaultOrderBy);\n\n  const handleRequestSort = (_, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (checked, newSelected) => {\n    if (checked) {\n      setSelected(newSelected);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (_, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (_, newPage) => setPage(newPage);\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  return {\n    page,\n    order,\n    orderBy,\n    selected,\n    rowsPerPage,\n\n    isSelected,\n    handleClick,\n    handleChangePage,\n    handleRequestSort,\n    handleSelectAllClick,\n    handleChangeRowsPerPage,\n  };\n};\n\nexport default useTable;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4z\"\n}), 'Done');","import { Clear, Done, TrendingFlat } from \"@mui/icons-material\";\nimport {\n  Checkbox,\n  IconButton,\n  Paper,\n  styled,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  useTheme\n} from \"@mui/material\";\nimport { Breadcrumb } from \"../../../components\";\nimport TableHead from \"../../../components/data-table/TableHead\";\nimport TableToolbar from \"../../../components/data-table/TableToolbar\";\nimport { getComparator, stableSort } from \"../../../components/data-table/utils\";\nimport { Span } from \"../../../components/Typography\";\nimport useTable from \"../../../hooks/useTable\";\nimport { format } from \"date-fns\";\nimport { useNavigate } from \"react-router-dom\";\n\n// styled components\n\nconst StyledSpan = styled(Span)(({ bgColor }) => ({\n  color: \"#fff\",\n  padding: \"2px 8px\",\n  borderRadius: \"4px\",\n  background: bgColor,\n  textTransform: \"capitalize\"\n}));\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" }\n  }\n}));\n\nconst OrderList = () => {\n  const {\n    page,\n    order,\n    orderBy,\n    selected,\n    rowsPerPage,\n\n    isSelected,\n    handleClick,\n    handleChangePage,\n    handleRequestSort,\n    handleSelectAllClick,\n    handleChangeRowsPerPage\n  } = useTable({ defaultOrderBy: \"name\" });\n\n  const navigate = useNavigate();\n\n  const { palette } = useTheme();\n  const bgGreen = \"rgba(9, 182, 109, 1)\";\n  const bgError = palette.error.main;\n  const bgSecondary = palette.secondary.main;\n\n  // TABLE HEADER COLUMN LIST\n  const columns = [\n    { id: \"orderNo\", align: \"left\", disablePadding: true, label: \"Order No\" },\n    { id: \"customer\", align: \"center\", disablePadding: false, label: \"Customer\" },\n    { id: \"product\", align: \"center\", disablePadding: false, label: \"Product\" },\n    { id: \"date\", align: \"center\", disablePadding: false, label: \"Date\" },\n    { id: \"status\", align: \"center\", disablePadding: false, label: \"Status\" },\n    { id: \"method\", align: \"center\", disablePadding: false, label: \"Method\" },\n    { id: \"total\", align: \"center\", disablePadding: false, label: \"Total\" },\n    { id: \"edit\", align: \"center\", disablePadding: false, label: \"Edit\" }\n  ];\n\n  const handleSelectAllRows = (event) => {\n    const newSelected = orderList.map((n) => n.name);\n    handleSelectAllClick(event.target.checked, newSelected);\n  };\n\n  const renderStatus = (status) => {\n    if (status === \"delivered\") return <StyledSpan bgColor={bgGreen}>{status}</StyledSpan>;\n    if (status === \"processing\") return <StyledSpan bgColor={bgSecondary}>{status}</StyledSpan>;\n    if (status === \"cancelled\") return <StyledSpan bgColor={bgError}>{status}</StyledSpan>;\n  };\n\n  return (\n    <Container>\n      <div className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Pages\", path: \"/pages\" }, { name: \"Order List\" }]} />\n      </div>\n\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\n        <TableToolbar title=\"All Orders\" numSelected={selected.length} />\n\n        <TableContainer>\n          <Table sx={{ minWidth: 1200 }}>\n            <TableHead\n              order={order}\n              orderBy={orderBy}\n              headCells={columns}\n              rowCount={orderList.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllRows}\n            />\n\n            <TableBody>\n              {stableSort(orderList, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const isItemSelected = isSelected(row.name);\n\n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={row.name}\n                      role=\"checkbox\"\n                      selected={isItemSelected}\n                      aria-checked={isItemSelected}\n                      onClick={(event) => handleClick(event, row.name)}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox color=\"primary\" checked={isItemSelected} />\n                      </TableCell>\n\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        {row.orderNo}\n                      </TableCell>\n\n                      <TableCell align=\"center\">{row.customer}</TableCell>\n                      <TableCell align=\"center\">{row.product}</TableCell>\n                      <TableCell align=\"center\">{format(row.date, \"dd MMM, yyyy\")}</TableCell>\n                      <TableCell align=\"center\">{renderStatus(row.status)}</TableCell>\n                      <TableCell align=\"center\">{row.method}</TableCell>\n                      <TableCell align=\"center\">${row.total}</TableCell>\n\n                      <TableCell align=\"center\">\n                        <Tooltip title=\"Mark as Delivered\">\n                          <IconButton>\n                            <Done color=\"success\" fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n\n                        <Tooltip title=\"Cancel Order\">\n                          <IconButton>\n                            <Clear color=\"error\" fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n\n                        <Tooltip title=\"View Order\">\n                          <IconButton onClick={() => navigate(`/invoice/${row.orderNo}`)}>\n                            <TrendingFlat fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <TablePagination\n          page={page}\n          component=\"div\"\n          count={orderList.length}\n          rowsPerPage={rowsPerPage}\n          onPageChange={handleChangePage}\n          rowsPerPageOptions={[5, 10, 25]}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Container>\n  );\n};\n\nconst orderList = [\n  {\n    orderNo: \"lkfjdfjdsjdslgkfjdskjfds\",\n    date: new Date(),\n    customer: \"Ben Schieldman\",\n    product: \"Bit Bass Headphone\",\n    method: \"PayPal\",\n    total: 15.25,\n    status: \"delivered\"\n  },\n  {\n    orderNo: \"fkjjirewoigkjdhvkcxyhuig\",\n    date: new Date(),\n    customer: \"Joyce Watson\",\n    product: \"Comlion Watch\",\n    method: \"Visa Card\",\n    total: 75.25,\n    status: \"cancelled\"\n  },\n  {\n    orderNo: \"fdskjkljicuviosduisjd\",\n    date: new Date(),\n    customer: \"Kayle Brown\",\n    product: \"Beats Headphone\",\n    method: \"Master Card\",\n    total: 45.25,\n    status: \"processing\"\n  },\n  {\n    orderNo: \"fdskfjdsuoiucrwevbgd\",\n    date: new Date(),\n    customer: \"Ven Helsing\",\n    product: \"BMW Bumper\",\n    method: \"Master Card\",\n    total: 2145.25,\n    status: \"delivered\"\n  }\n];\n\nexport default OrderList;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');"],"names":["props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","headCells","_jsx","MuiTableHead","children","_jsxs","TableRow","TableCell","padding","Checkbox","color","onChange","checked","indeterminate","map","headCell","align","disablePadding","sortDirection","id","TableSortLabel","active","onClick","property","event","direction","label","_ref","title","Toolbar","sx","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","Typography","flex","variant","component","Tooltip","IconButton","Delete","FilterList","stableSort","array","comparator","stabilizedThis","el","index","sort","a","b","descendingComparator","getComparator","defaultOrderBy","page","setPage","useState","setOrder","selected","setSelected","rowsPerPage","setRowsPerPage","setOrderBy","isSelected","name","indexOf","handleClick","_","selectedIndex","newSelected","concat","slice","length","handleChangePage","newPage","handleRequestSort","handleSelectAllClick","handleChangeRowsPerPage","parseInt","target","value","createSvgIcon","d","StyledSpan","styled","Span","bgColor","borderRadius","background","textTransform","Container","_ref2","margin","breakpoints","down","marginBottom","orderList","orderNo","date","Date","customer","product","method","total","status","OrderList","useTable","navigate","useNavigate","useTheme","bgError","error","bgSecondary","secondary","className","Breadcrumb","routeSegments","path","Paper","width","mb","TableToolbar","TableContainer","Table","minWidth","TableHead","n","TableBody","row","isItemSelected","hover","tabIndex","role","scope","format","Done","fontSize","Clear","TrendingFlat","TablePagination","count","onPageChange","rowsPerPageOptions","onRowsPerPageChange"],"sourceRoot":""}