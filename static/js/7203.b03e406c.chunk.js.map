{"version":3,"file":"static/js/7203.b03e406c.chunk.js","mappings":"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","sources":["app/hooks/useUsers.js","app/views/pages/user-list/UserList2.jsx","app/views/pages/user-list/styles.js"],"sourcesContent":["// import { getUsers } from \"app/redux/slices/userSlice\";\n// import { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\n// const useUsers = () => {\n//   const dispatch = useDispatch();\n//   const { error, users, loading } = useSelector((state) => state.users);\n\n//   useEffect(() => {\n//     dispatch(getUsers());\n//   }, [dispatch]);\n\n//   return {\n//     users,\n//     isError: error,\n//     isLoading: loading,\n//   };\n// };\n\n// export default useUsers;\n\n\n\nimport { useState, useEffect } from \"react\";\n\nconst useUsers = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\"https://api.example.com/users\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch users\");\n        }\n        const data = await response.json();\n        setUsers(data);\n        setLoading(false);\n        setError(null);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n        setUsers([]);\n        setLoading(false);\n        setError(\"Failed to fetch users\");\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  return {\n    users,\n    isLoading: loading,\n    isError: error,\n  };\n};\n\nexport default useUsers;\n","import { Avatar, Box, Card, Grid } from \"@mui/material\";\r\nimport { Breadcrumb } from \"app/components\";\r\nimport { FlexBetween, FlexBox } from \"app/components/FlexBox\";\r\nimport { H5 } from \"app/components/Typography\";\r\nimport useUsers from \"app/hooks/useUsers\";\r\nimport { Container, StyledButton, StyledP } from \"./styles\";\r\n\r\nconst UserList2 = () => {\r\n  const { users } = useUsers();\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Pages\", path: \"/pages\" }, { name: \"User List 2\" }]} />\r\n      </div>\r\n\r\n      <Grid container spacing={3}>\r\n        {users.map((user) => (\r\n          <Grid key={user.id} item sm={6} xs={12}>\r\n            <Card>\r\n              <FlexBetween p=\"24px\" m={-1} flexWrap=\"wrap\">\r\n                <FlexBox alignItems=\"center\" m={1}>\r\n                  <Avatar src={user.imgUrl} sx={{ width: 48, height: 48 }} />\r\n\r\n                  <Box ml={2}>\r\n                    <H5>{user.name}</H5>\r\n                    <StyledP sx={{ mt: 1, fontWeight: \"normal\", textTransform: \"capitalize\" }}>\r\n                      {user.company?.toLowerCase()}\r\n                    </StyledP>\r\n                  </Box>\r\n                </FlexBox>\r\n\r\n                <Box m={1} display=\"flex\">\r\n                  <StyledButton size=\"small\" sx={{ mr: \"4px\" }}>\r\n                    CHAT\r\n                  </StyledButton>\r\n                  <StyledButton size=\"small\">PROFILE</StyledButton>\r\n                </Box>\r\n              </FlexBetween>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserList2;\r\n","import { Button, styled } from \"@mui/material\";\nimport { Paragraph } from \"app/components/Typography\";\nimport { convertHexToRGB } from \"app/utils/utils\";\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  transition: \"all 250ms\",\n  color: theme.palette.primary.main,\n  background: `rgba(${convertHexToRGB(theme.palette.primary.main)}, 0.15)`,\n  \"&:hover\": {\n    color: \"#ffffff\",\n    fallbacks: [{ color: \"white !important\" }],\n    background: `${theme.palette.primary.main} !important`,\n    backgroundColor: `${theme.palette.primary.main} !important`,\n  },\n}));\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst StyledP = styled(Paragraph)(({ theme }) => ({\n  color: theme.palette.text.secondary,\n}));\n\nexport { StyledButton, Container, StyledP };\n"],"names":["useUsers","users","setUsers","useState","loading","setLoading","error","setError","useEffect","async","response","fetch","ok","Error","data","json","console","fetchUsers","isLoading","isError","UserList2","_jsxs","Container","children","_jsx","className","Breadcrumb","routeSegments","name","path","Grid","container","spacing","map","user","_user$company","item","sm","xs","Card","FlexBetween","p","m","flexWrap","FlexBox","alignItems","Avatar","src","imgUrl","sx","width","height","Box","ml","H5","StyledP","mt","fontWeight","textTransform","company","toLowerCase","display","StyledButton","size","mr","id","styled","Button","_ref","theme","paddingLeft","paddingRight","transition","color","palette","primary","main","background","concat","convertHexToRGB","fallbacks","backgroundColor","_ref2","margin","breakpoints","down","marginBottom","Paragraph","_ref3","text","secondary"],"sourceRoot":""}