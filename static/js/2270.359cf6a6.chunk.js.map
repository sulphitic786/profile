{"version":3,"file":"static/js/2270.359cf6a6.chunk.js","mappings":"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","sources":["app/views/pages/products/ProductForm.jsx"],"sourcesContent":["import { Box, Button, Card, Divider, Grid, Icon, MenuItem, styled, TextField } from \"@mui/material\";\r\nimport { Breadcrumb } from \"../../../components\";\r\nimport { FlexAlignCenter, FlexBox } from \"../../../components/FlexBox\";\r\nimport { H4 } from \"../../../components/Typography\";\r\nimport { convertHexToRGB } from \"../../../utils/utils\";\r\nimport { Formik } from \"formik\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport * as yup from \"yup\";\r\n\r\n// styled components\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" }\r\n  }\r\n}));\r\n\r\nconst StyledTextField = styled(TextField)({ marginBottom: \"16px\" });\r\nconst Form = styled(\"form\")({ paddingLeft: \"16px\", paddingRight: \"16px\" });\r\n\r\nconst DropZone = styled(FlexAlignCenter)(({ isDragActive, theme }) => ({\r\n  height: 160,\r\n  width: \"100%\",\r\n  cursor: \"pointer\",\r\n  borderRadius: \"4px\",\r\n  marginBottom: \"16px\",\r\n  transition: \"all 350ms ease-in-out\",\r\n  border: `2px dashed rgba(${convertHexToRGB(theme.palette.text.primary)}, 0.3)`,\r\n  \"&:hover\": {\r\n    background: `rgb(${convertHexToRGB(theme.palette.text.primary)}, 0.2) !important`\r\n  },\r\n  background: isDragActive ? \"rgb(0, 0, 0, 0.15)\" : \"rgb(0, 0, 0, 0.01)\"\r\n}));\r\n\r\nconst ProductForm = () => {\r\n  const [imageList, setImageList] = useState([]);\r\n  const { getRootProps, getInputProps, acceptedFiles } = useDropzone({\r\n    accept: { \"image/*\": [\".jpg\", \".png\"] }\r\n  });\r\n\r\n  const handleSubmit = async (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setImageList(acceptedFiles);\r\n  }, [acceptedFiles]);\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Pages\", path: \"/pages\" }, { name: \"New Product\" }]} />\r\n      </div>\r\n\r\n      <Card elevation={3}>\r\n        <Box p={2} display=\"flex\">\r\n          <H4>Add New Product</H4>\r\n        </Box>\r\n        <Divider sx={{ mb: 3 }} />\r\n\r\n        <Formik\r\n          onSubmit={handleSubmit}\r\n          enableReinitialize={true}\r\n          initialValues={initialValues}\r\n          validationSchema={productSchema}\r\n        >\r\n          {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Grid container spacing={3}>\r\n                <Grid item sm={6} xs={12}>\r\n                  <StyledTextField\r\n                    fullWidth\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.name || \"\"}\r\n                    error={Boolean(touched.name && errors.name)}\r\n                    helperText={touched.name && errors.name}\r\n                  />\r\n\r\n                  <StyledTextField\r\n                    fullWidth\r\n                    multiline\r\n                    size=\"small\"\r\n                    name=\"description\"\r\n                    variant=\"outlined\"\r\n                    label=\"Description\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.description || \"\"}\r\n                    error={Boolean(touched.description && errors.description)}\r\n                    helperText={touched.description && errors.description}\r\n                  />\r\n\r\n                  <StyledTextField\r\n                    select\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    name=\"category\"\r\n                    label=\"Category\"\r\n                    variant=\"outlined\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.category || \"\"}\r\n                    error={Boolean(touched.category && errors.category)}\r\n                    helperText={touched.category && errors.category}\r\n                  >\r\n                    {categoryList.sort().map((cat) => (\r\n                      <MenuItem value={cat} key={cat}>\r\n                        {cat}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </StyledTextField>\r\n\r\n                  <DropZone {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <FlexBox alignItems=\"center\" flexDirection=\"column\">\r\n                      <Icon sx={{ color: \"text.secondary\", fontSize: \"48px\" }}>publish</Icon>\r\n                      {imageList.length ? (\r\n                        <span>{imageList.length} images were selected</span>\r\n                      ) : (\r\n                        <span>Drop product images</span>\r\n                      )}\r\n                    </FlexBox>\r\n                  </DropZone>\r\n                </Grid>\r\n\r\n                <Grid item sm={6} xs={12}>\r\n                  <StyledTextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    name=\"productCode\"\r\n                    variant=\"outlined\"\r\n                    onBlur={handleBlur}\r\n                    label=\"Product Code\"\r\n                    onChange={handleChange}\r\n                    value={values.productCode || \"\"}\r\n                    error={Boolean(touched.productCode && errors.productCode)}\r\n                    helperText={touched.productCode && errors.productCode}\r\n                  />\r\n\r\n                  <StyledTextField\r\n                    fullWidth\r\n                    name=\"sku\"\r\n                    label=\"SKU\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.sku || \"\"}\r\n                    error={Boolean(touched.sku && errors.sku)}\r\n                    helperText={touched.sku && errors.sku}\r\n                  />\r\n\r\n                  <StyledTextField\r\n                    fullWidth\r\n                    name=\"price\"\r\n                    size=\"small\"\r\n                    type=\"number\"\r\n                    label=\"Price\"\r\n                    variant=\"outlined\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.price || \"\"}\r\n                    error={Boolean(touched.price && errors.price)}\r\n                    helperText={touched.price && errors.price}\r\n                  />\r\n\r\n                  <StyledTextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    type=\"number\"\r\n                    name=\"salePrice\"\r\n                    label=\"Sale Price\"\r\n                    variant=\"outlined\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.salePrice || \"\"}\r\n                    error={Boolean(touched.salePrice && errors.salePrice)}\r\n                    helperText={touched.salePrice && errors.salePrice}\r\n                  />\r\n\r\n                  <StyledTextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    label=\"Quantity\"\r\n                    variant=\"outlined\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    value={values.quantity || \"\"}\r\n                    error={Boolean(touched.quantity && errors.quantity)}\r\n                    helperText={touched.quantity && errors.quantity}\r\n                  />\r\n\r\n                  <StyledTextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    onBlur={handleBlur}\r\n                    name=\"minOrderAmount\"\r\n                    onChange={handleChange}\r\n                    label=\"Minimum Order Amount\"\r\n                    value={values.minOrderAmount || \"\"}\r\n                    error={Boolean(touched.minOrderAmount && errors.minOrderAmount)}\r\n                    helperText={touched.minOrderAmount && errors.minOrderAmount}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Button type=\"submit\" color=\"primary\" variant=\"contained\" sx={{ mb: 2, px: 6 }}>\r\n                Add Product\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst productSchema = yup.object().shape({\r\n  name: yup.string().required(\"Name is required\"),\r\n  price: yup.number().required(\"Price is required\"),\r\n  category: yup.string().required(\"Category is required\"),\r\n  quantity: yup.number().required(\"Quantity is required\")\r\n});\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  sku: \"\",\r\n  price: \"\",\r\n  category: \"\",\r\n  quantity: \"\"\r\n};\r\n\r\nconst categoryList = [\"Electronics\", \"Clothes\", \"Toys\", \"Books\", \"Utensils\"];\r\nexport default ProductForm;\r\n"],"names":["Container","styled","_ref","theme","margin","breakpoints","down","marginBottom","StyledTextField","TextField","Form","paddingLeft","paddingRight","DropZone","FlexAlignCenter","_ref2","isDragActive","height","width","cursor","borderRadius","transition","border","concat","convertHexToRGB","palette","text","primary","background","productSchema","yup","shape","name","required","price","category","quantity","initialValues","sku","categoryList","ProductForm","imageList","setImageList","useState","getRootProps","getInputProps","acceptedFiles","useDropzone","accept","useEffect","_jsxs","children","_jsx","className","Breadcrumb","routeSegments","path","Card","elevation","Box","p","display","H4","Divider","sx","mb","Formik","onSubmit","async","console","log","values","enableReinitialize","validationSchema","_ref3","errors","touched","handleChange","handleBlur","handleSubmit","Grid","container","spacing","item","sm","xs","fullWidth","label","size","variant","onBlur","onChange","value","error","Boolean","helperText","multiline","description","select","sort","map","cat","MenuItem","FlexBox","alignItems","flexDirection","Icon","color","fontSize","length","productCode","type","salePrice","minOrderAmount","Button","px"],"sourceRoot":""}