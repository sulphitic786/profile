{"version":3,"file":"static/js/895.e12ff263.chunk.js","mappings":"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","sources":["app/views/material-kit/tables/PaginationTable.jsx","app/views/material-kit/tables/SimpleTable.jsx","app/views/material-kit/tables/AppTable.jsx"],"sourcesContent":["import {\n  Box,\n  Icon,\n  IconButton,\n  styled,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n} from \"@mui/material\";\nimport { useState } from \"react\";\n\nconst StyledTable = styled(Table)(() => ({\n  whiteSpace: \"pre\",\n  \"& thead\": {\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\n  },\n  \"& tbody\": {\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\n  },\n}));\n\nconst subscribarList = [\n  {\n    name: \"john doe\",\n    date: \"18 january, 2019\",\n    amount: 1000,\n    status: \"close\",\n    company: \"ABC Fintech LTD.\",\n  },\n  {\n    name: \"kessy bryan\",\n    date: \"10 january, 2019\",\n    amount: 9000,\n    status: \"open\",\n    company: \"My Fintech LTD.\",\n  },\n  {\n    name: \"kessy bryan\",\n    date: \"10 january, 2019\",\n    amount: 9000,\n    status: \"open\",\n    company: \"My Fintech LTD.\",\n  },\n  {\n    name: \"james cassegne\",\n    date: \"8 january, 2019\",\n    amount: 5000,\n    status: \"close\",\n    company: \"Collboy Tech LTD.\",\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\",\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\",\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\",\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\",\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\",\n  },\n];\n\nconst PaginationTable = () => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleChangePage = (_, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Box width=\"100%\" overflow=\"auto\">\n      <StyledTable>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">Name</TableCell>\n            <TableCell align=\"center\">Company</TableCell>\n            <TableCell align=\"center\">Start Date</TableCell>\n            <TableCell align=\"center\">Status</TableCell>\n            <TableCell align=\"center\">Amount</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {subscribarList\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((subscriber, index) => (\n              <TableRow key={index}>\n                <TableCell align=\"left\">{subscriber.name}</TableCell>\n                <TableCell align=\"center\">{subscriber.company}</TableCell>\n                <TableCell align=\"center\">{subscriber.date}</TableCell>\n                <TableCell align=\"center\">{subscriber.status}</TableCell>\n                <TableCell align=\"center\">${subscriber.amount}</TableCell>\n                <TableCell align=\"right\">\n                  <IconButton>\n                    <Icon color=\"error\">close</Icon>\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </StyledTable>\n\n      <TablePagination\n        sx={{ px: 2 }}\n        page={page}\n        component=\"div\"\n        rowsPerPage={rowsPerPage}\n        count={subscribarList.length}\n        onPageChange={handleChangePage}\n        rowsPerPageOptions={[5, 10, 25, 35, 50]}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\n        backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\n      />\n    </Box>\n  );\n};\n\nexport default PaginationTable;\n","import {\n  Box,\n  Icon,\n  IconButton,\n  styled,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n  whiteSpace: \"pre\",\n  \"& thead\": {\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\n  },\n  \"& tbody\": {\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\n  },\n}));\n\nconst subscribarList = [\n  {\n    name: \"john doe\",\n    date: \"18 january, 2019\",\n    amount: 1000,\n    status: \"close\",\n    company: \"ABC Fintech LTD.\",\n  },\n  {\n    name: \"kessy bryan\",\n    date: \"10 january, 2019\",\n    amount: 9000,\n    status: \"open\",\n    company: \"My Fintech LTD.\",\n  },\n  {\n    name: \"james cassegne\",\n    date: \"8 january, 2019\",\n    amount: 5000,\n    status: \"close\",\n    company: \"Collboy Tech LTD.\",\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\",\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\",\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\",\n  },\n];\n\nconst SimpleTable = () => {\n  return (\n    <Box width=\"100%\" overflow=\"auto\">\n      <StyledTable>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">Name</TableCell>\n            <TableCell align=\"center\">Company</TableCell>\n            <TableCell align=\"center\">Start Date</TableCell>\n            <TableCell align=\"center\">Status</TableCell>\n            <TableCell align=\"center\">Amount</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {subscribarList.map((subscriber, index) => (\n            <TableRow key={index}>\n              <TableCell align=\"left\">{subscriber.name}</TableCell>\n              <TableCell align=\"center\">{subscriber.company}</TableCell>\n              <TableCell align=\"center\">{subscriber.date}</TableCell>\n              <TableCell align=\"center\">{subscriber.status}</TableCell>\n              <TableCell align=\"center\">${subscriber.amount}</TableCell>\n              <TableCell align=\"right\">\n                <IconButton>\n                  <Icon color=\"error\">close</Icon>\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </StyledTable>\n    </Box>\n  );\n};\n\nexport default SimpleTable;\n","import { Box, styled } from \"@mui/material\";\nimport { Breadcrumb, SimpleCard } from \"app/components\";\nimport PaginationTable from \"./PaginationTable\";\nimport SimpleTable from \"./SimpleTable\";\n\nconst Container = styled(\"div\")(({ theme }) => ({\n  margin: \"30px\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n  \"& .breadcrumb\": {\n    marginBottom: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\n  },\n}));\n\nconst AppTable = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Table\" }]} />\n      </Box>\n\n      <SimpleCard title=\"Simple Table\">\n        <SimpleTable />\n      </SimpleCard>\n\n      <SimpleCard title=\"Pagination Table\">\n        <PaginationTable />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AppTable;\n"],"names":["StyledTable","styled","Table","whiteSpace","paddingLeft","paddingRight","textTransform","subscribarList","name","date","amount","status","company","useState","page","setPage","rowsPerPage","setRowsPerPage","Box","width","overflow","TableHead","TableRow","TableCell","align","TableBody","slice","map","subscriber","index","IconButton","Icon","color","TablePagination","sx","px","component","count","length","onPageChange","_","newPage","rowsPerPageOptions","onRowsPerPageChange","event","target","value","nextIconButtonProps","backIconButtonProps","theme","Container","margin","breakpoints","down","marginBottom","className","routeSegments","path","title"],"sourceRoot":""}