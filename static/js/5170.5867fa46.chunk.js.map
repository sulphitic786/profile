{"version":3,"file":"static/js/5170.5867fa46.chunk.js","mappings":"sPAGA,MAgDA,EAhDmBA,IACjB,MAAM,iBAAEC,EAAgB,MAAEC,EAAK,QAAEC,EAAO,YAAEC,EAAW,SAAEC,EAAQ,cAAEC,EAAa,UAAEC,GAC9EP,EAIF,OACEQ,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACXC,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAAAF,SAAA,EACPF,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,QAAQ,WAAUJ,UAC3BF,EAAAA,EAAAA,KAACO,EAAAA,EAAQ,CACPC,MAAM,UACNC,SAAUhB,EACViB,QAASb,EAAW,GAAKD,IAAgBC,EACzCc,cAAef,EAAc,GAAKA,EAAcC,MAInDE,EAAUa,KAAKC,IACdb,SAAAA,EAAAA,KAACK,EAAAA,EAAS,CAERS,MAAOD,EAASC,MAChBR,QAASO,EAASE,eAAiB,OAAS,SAC5CC,cAAerB,IAAYkB,EAASI,IAAKvB,EAAcQ,UAEvDF,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CACbC,OAAQxB,IAAYkB,EAASI,GAC7BG,SAvBeC,EAuBYR,EAASI,GAvBPK,GAAUxB,EAAcwB,EAAOD,IAwB5DE,UAAW5B,IAAYkB,EAASI,GAAKvB,EAAQ,MAAMQ,SAElDW,EAASW,SAVPX,EAASI,IAhBGI,KA6BpB,QAEU,C,8HCnCnB,MAuCA,EAvCqBI,IAA6B,IAA5B,YAAE7B,EAAW,MAAE8B,GAAOD,EAC1C,OACEtB,EAAAA,EAAAA,MAACwB,EAAAA,EAAO,CACNC,GAAI,CACFC,GAAI,CAAEC,GAAI,GACVC,GAAI,CAAEC,GAAI,EAAGF,GAAI,MACblC,EAAc,GAAK,CACrBqC,QAAUC,IACRC,EAAAA,EAAAA,IAAMD,EAAME,QAAQC,QAAQC,KAAMJ,EAAME,QAAQG,OAAOC,oBAE3DtC,SAAA,CAEDN,EAAc,GACbO,EAAAA,EAAAA,MAACsC,EAAAA,EAAU,CAACb,GAAI,CAAEc,KAAM,YAAclC,MAAM,UAAUmC,QAAQ,YAAYC,UAAU,MAAK1C,SAAA,CACtFN,EAAY,gBAGfI,EAAAA,EAAAA,KAACyC,EAAAA,EAAU,CAACb,GAAI,CAAEc,KAAM,YAAcC,QAAQ,KAAK1B,GAAG,aAAa2B,UAAU,MAAK1C,SAC/EwB,IAIJ9B,EAAc,GACbI,EAAAA,EAAAA,KAAC6C,EAAAA,EAAO,CAACnB,MAAM,SAAQxB,UACrBF,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAAA5C,UACTF,EAAAA,EAAAA,KAAC+C,EAAAA,EAAM,SAIX/C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAO,CAACnB,MAAM,cAAaxB,UAC1BF,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAAA5C,UACTF,EAAAA,EAAAA,KAACgD,EAAAA,EAAU,UAIT,C,kBCtCd,SAASC,EAAWC,EAAOC,GACzB,MAAMC,EAAiBF,EAAMtC,KAAI,CAACyC,EAAIC,IAAU,CAACD,EAAIC,KAQrD,OANAF,EAAeG,MAAK,CAACC,EAAGC,KACtB,MAAM/D,EAAQyD,EAAWK,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAV/D,EAAoBA,EACjB8D,EAAE,GAAKC,EAAE,EAAE,IAGbL,EAAexC,KAAKyC,GAAOA,EAAG,IACvC,CAEA,SAASK,EAAqBF,EAAGC,EAAG9D,GAClC,OAAI8D,EAAE9D,GAAW6D,EAAE7D,IAAkB,EACjC8D,EAAE9D,GAAW6D,EAAE7D,GAAiB,EAC7B,CACT,CAEA,SAASgE,EAAcjE,EAAOC,GAC5B,MAAc,SAAVD,EAAyB,CAAC8D,EAAGC,IAAMC,EAAqBF,EAAGC,EAAG9D,GACtD,CAAC6D,EAAGC,KAAOC,EAAqBF,EAAGC,EAAG9D,EACpD,C,4ECnBA,MAmEA,EAnEiB8B,IAAkC,IAAjC,eAAEmC,EAAiB,QAAQnC,EAC3C,MAAOoC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAC1BrE,EAAOsE,IAAYD,EAAAA,EAAAA,UAAS,QAC5BE,EAAUC,IAAeH,EAAAA,EAAAA,UAAS,KAClCI,EAAaC,IAAkBL,EAAAA,EAAAA,UAAS,KACxCpE,EAAS0E,IAAcN,EAAAA,EAAAA,UAASH,GA8CvC,MAAO,CACLC,OACAnE,QACAC,UACAsE,WACAE,cAEAG,WATkBC,IAAqC,IAA5BN,EAASO,QAAQD,GAU5CE,YArCkBA,CAACC,EAAGH,KACtB,MAAMI,EAAgBV,EAASO,QAAQD,GACvC,IAAIK,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAYC,OAAOZ,EAAUM,GAChB,IAAlBI,EACTC,EAAcA,EAAYC,OAAOZ,EAASa,MAAM,IACvCH,IAAkBV,EAASc,OAAS,EAC7CH,EAAcA,EAAYC,OAAOZ,EAASa,MAAM,GAAI,IAC3CH,EAAgB,IACzBC,EAAcA,EAAYC,OACxBZ,EAASa,MAAM,EAAGH,GAClBV,EAASa,MAAMH,EAAgB,KAInCT,EAAYU,EAAY,EAqBxBI,iBAlBuBA,CAACN,EAAGO,IAAYnB,EAAQmB,GAmB/CC,kBAtDwBA,CAACR,EAAGrD,KAE5B2C,EADcrE,IAAY0B,GAAsB,QAAV3B,EACrB,OAAS,OAC1B2E,EAAWhD,EAAS,EAoDpB8D,qBAjD2BA,CAACzE,EAASkE,KAEnCV,EADExD,EACUkE,EAIF,GAAG,EA4CfQ,wBAnB+B9D,IAC/B8C,EAAeiB,SAAS/D,EAAMgE,OAAOC,MAAO,KAC5CzB,EAAQ,EAAE,EAkBX,C,kDCzCH,MAkCA,EAlCiB0B,KACf,MAAOC,EAAOC,IAAY3B,EAAAA,EAAAA,UAAS,KAC5B4B,EAASC,IAAc7B,EAAAA,EAAAA,WAAS,IAChC8B,EAAOC,IAAY/B,EAAAA,EAAAA,UAAS,MAwBnC,OAtBAgC,EAAAA,EAAAA,YAAU,KACWC,WACjB,IACE,MAAMC,QAAiBC,MAAM,iCAC7B,IAAKD,EAASE,GACZ,MAAM,IAAIC,MAAM,yBAElB,MAAMC,QAAaJ,EAASK,OAC5BZ,EAASW,GACTT,GAAW,GACXE,EAAS,KACX,CAAE,MAAOD,GACPU,QAAQV,MAAM,wBAAyBA,GACvCH,EAAS,IACTE,GAAW,GACXE,EAAS,wBACX,GAGFU,EAAY,GACX,IAEI,CACLf,QACAgB,UAAWd,EACXe,QAASb,EACV,C,oSCzCH,MAAMc,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAAEC,OAAQ,GAAIC,aAAc,QAChDC,GAAUH,EAAAA,EAAAA,IAAOI,EAAAA,EAAPJ,CAAY,CAAEK,QAAS,OAAQC,WAAY,WAErDC,GAAYP,EAAAA,EAAAA,IAAO,MAAPA,EAAcnF,IAAA,IAAC,MAAES,GAAOT,EAAA,MAAM,CAC9C2F,OAAQ,OACR,CAAClF,EAAMmF,YAAYC,KAAK,OAAQ,CAC9BF,OAAQ,QAEV,gBAAiB,CACfG,aAAc,OACd,CAACrF,EAAMmF,YAAYC,KAAK,OAAQ,CAAEC,aAAc,SAEnD,IAkID,EAhIqBC,KACnB,MAAM,KACJ3D,EAAI,MACJnE,EAAK,QACLC,EAAO,SACPsE,EAAQ,YACRE,EAAW,WAEXG,EAAU,YACVG,EAAW,iBACXO,EAAgB,kBAChBE,EAAiB,qBACjBC,EAAoB,wBACpBC,IACEqC,EAAAA,EAAAA,GAAS,CAAE7D,eAAgB,UAEzB,MAAE6B,IAAUD,EAAAA,EAAAA,KACZkC,GAAWC,EAAAA,EAAAA,MAgBXC,EAAqB,OAALnC,QAAK,IAALA,OAAK,EAALA,EAAO7E,KAAKiH,IAAI,CACpCtD,KAAMsD,EAAKtD,KACXuD,MAAOD,EAAKC,MACZC,OAAQF,EAAKE,OACbC,QAASH,EAAKG,QACdC,QAASJ,EAAKI,QACdC,QAASL,EAAKK,YAGhB,OACE/H,EAAAA,EAAAA,MAACgH,EAAS,CAAAjH,SAAA,EACRF,EAAAA,EAAAA,KAAA,OAAKmI,UAAU,aAAYjI,UACzBF,EAAAA,EAAAA,KAACoI,EAAAA,GAAU,CACTC,cAAe,CAAC,CAAE9D,KAAM,QAAS+D,KAAM,UAAY,CAAE/D,KAAM,uBAI/DpE,EAAAA,EAAAA,MAACoI,EAAAA,EAAK,CAAC3G,GAAI,CAAE4G,MAAO,OAAQC,GAAI,GAAIvI,SAAA,EAClCF,EAAAA,EAAAA,KAAC0I,EAAAA,EAAY,CAAChH,MAAM,gBAAgB9B,YAAaqE,EAASc,UAE1D/E,EAAAA,EAAAA,KAAC2I,EAAAA,EAAc,CAAAzI,UACbC,EAAAA,EAAAA,MAACyI,EAAAA,EAAK,CAAChH,GAAI,CAAEiH,SAAU,KAAM3I,SAAA,EAC3BF,EAAAA,EAAAA,KAAC8I,EAAAA,EAAS,CACRpJ,MAAOA,EACPC,QAASA,EACTI,UAtCI,CACd,CAAEkB,GAAI,OAAQH,MAAO,OAAQC,gBAAgB,EAAMS,MAAO,QAC1D,CAAEP,GAAI,UAAWH,MAAO,SAAUC,gBAAgB,EAAOS,MAAO,WAChE,CAAEP,GAAI,UAAWH,MAAO,SAAUC,gBAAgB,EAAOS,MAAO,WAChE,CAAEP,GAAI,UAAWH,MAAO,SAAUC,gBAAgB,EAAOS,MAAO,WAChE,CAAEP,GAAI,OAAQH,MAAO,SAAUC,gBAAgB,EAAOS,MAAO,SAkCnD5B,YAAaqE,EAASc,OACtBlF,SAAU+H,EAAc7C,OACxBjF,cAAeoF,EACfzF,iBAlCiB6B,IAC3B,MAAMsD,EAAca,EAAM7E,KAAKmI,GAAMA,EAAExE,OACvCY,EAAqB7D,EAAMgE,OAAO5E,QAASkE,EAAY,KAmC/C5E,EAAAA,EAAAA,KAACgJ,EAAAA,EAAS,CAAA9I,UACP+C,EAAAA,EAAAA,IAAW2E,GAAejE,EAAAA,EAAAA,IAAcjE,EAAOC,IAC7CmF,MAAMjB,EAAOM,EAAaN,EAAOM,EAAcA,GAC/CvD,KAAKqI,IACJ,MAAMC,EAAiB5E,EAAW2E,EAAI1E,MAEtC,OACEpE,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CACP+I,OAAK,EACLC,UAAW,EAEXC,KAAK,WACLpF,SAAUiF,EACV,eAAcA,EACd9H,QAAUE,GAAUmD,EAAYnD,EAAO2H,EAAI1E,MAAMrE,SAAA,EAEjDF,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,QAAQ,WAAUJ,UAC3BF,EAAAA,EAAAA,KAACO,EAAAA,EAAQ,CAACC,MAAM,UAAUE,QAASwI,OAGrClJ,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACuC,UAAU,KAAK0G,MAAM,MAAMhJ,QAAQ,OAAMJ,UAClDC,EAAAA,EAAAA,MAAC4G,EAAO,CAACwC,IAAK,EAAErJ,SAAA,EACdF,EAAAA,EAAAA,KAAC2G,EAAG,CAAC6C,IAAKP,EAAIlB,OAAQ0B,IAAI,UAC1BzJ,EAAAA,EAAAA,KAAC0J,EAAAA,GAAE,CAACC,SAAU,GAAGzJ,SAAE+I,EAAI1E,aAI3BvE,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACS,MAAM,SAAQZ,SAAE+I,EAAIhB,WAE/BjI,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACS,MAAM,SAAQZ,SAAE+I,EAAIf,WAE/BlI,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACS,MAAM,SAAQZ,SAAE+I,EAAIjB,WAE/B7H,EAAAA,EAAAA,MAACE,EAAAA,EAAS,CAACS,MAAM,SAAQZ,SAAA,EACvBF,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAAC1B,QAASA,IAAMsG,EAAS,wBAAwBxH,UAC1DF,EAAAA,EAAAA,KAAC4J,EAAAA,EAAI,OAGP5J,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAAC1B,QAASA,IAAMsG,EAAS,uBAAuBxH,UACzDF,EAAAA,EAAAA,KAAC6J,EAAAA,EAAY,WA7BZZ,EAAI1E,KAgCA,YAOvBvE,EAAAA,EAAAA,KAAC8J,EAAAA,EAAe,CACdjG,KAAMA,EACNjB,UAAU,MACVuB,YAAaA,EACb4F,MAAOnC,EAAc7C,OACrBiF,aAAchF,EACdiF,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,oBAAqB9E,SAGf,C,6DCrJhB,SAAe+E,EAAAA,EAAAA,IAA4BnK,EAAAA,EAAAA,KAAK,OAAQ,CACtDoK,EAAG,uIACD,O","sources":["app/components/data-table/TableHead.jsx","app/components/data-table/TableToolbar.jsx","app/components/data-table/utils.js","app/hooks/useTable.js","app/hooks/useUsers.js","app/views/pages/customers/CustomerList.jsx","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["import { Checkbox, TableCell, TableRow, TableSortLabel } from \"@mui/material\";\nimport MuiTableHead from \"@mui/material/TableHead\";\n\nconst TableHead = (props) => {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells } =\n    props;\n\n  const createSortHandler = (property) => (event) => onRequestSort(event, property);\n\n  return (\n    <MuiTableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            onChange={onSelectAllClick}\n            checked={rowCount > 0 && numSelected === rowCount}\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n          />\n        </TableCell>\n\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align}\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              onClick={createSortHandler(headCell.id)}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n            >\n              {headCell.label}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </MuiTableHead>\n  );\n};\n\n// TableHead.propTypes = {\n//   numSelected: PropTypes.number.isRequired,\n//   onRequestSort: PropTypes.func.isRequired,\n//   onSelectAllClick: PropTypes.func.isRequired,\n//   order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n//   orderBy: PropTypes.string.isRequired,\n//   rowCount: PropTypes.number.isRequired,\n// };\n\nexport default TableHead;\n","import { Delete, FilterList } from \"@mui/icons-material\";\nimport { alpha, IconButton, Toolbar, Tooltip, Typography } from \"@mui/material\";\n\nconst TableToolbar = ({ numSelected, title }) => {\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography sx={{ flex: \"1 1 100%\" }} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography sx={{ flex: \"1 1 100%\" }} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          {title}\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <Delete />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <FilterList />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nexport default TableToolbar;\n","function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) return -1;\n  if (b[orderBy] > a[orderBy]) return 1;\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  if (order === \"desc\") return (a, b) => descendingComparator(a, b, orderBy);\n  else return (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport { stableSort, getComparator, descendingComparator };\n","import { useState } from \"react\";\n\nconst useTable = ({ defaultOrderBy = \"name\" }) => {\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState(\"asc\");\n  const [selected, setSelected] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [orderBy, setOrderBy] = useState(defaultOrderBy);\n\n  const handleRequestSort = (_, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (checked, newSelected) => {\n    if (checked) {\n      setSelected(newSelected);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (_, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (_, newPage) => setPage(newPage);\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  return {\n    page,\n    order,\n    orderBy,\n    selected,\n    rowsPerPage,\n\n    isSelected,\n    handleClick,\n    handleChangePage,\n    handleRequestSort,\n    handleSelectAllClick,\n    handleChangeRowsPerPage,\n  };\n};\n\nexport default useTable;\n","// import { getUsers } from \"app/redux/slices/userSlice\";\n// import { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\n// const useUsers = () => {\n//   const dispatch = useDispatch();\n//   const { error, users, loading } = useSelector((state) => state.users);\n\n//   useEffect(() => {\n//     dispatch(getUsers());\n//   }, [dispatch]);\n\n//   return {\n//     users,\n//     isError: error,\n//     isLoading: loading,\n//   };\n// };\n\n// export default useUsers;\n\n\n\nimport { useState, useEffect } from \"react\";\n\nconst useUsers = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\"https://api.example.com/users\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch users\");\n        }\n        const data = await response.json();\n        setUsers(data);\n        setLoading(false);\n        setError(null);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n        setUsers([]);\n        setLoading(false);\n        setError(\"Failed to fetch users\");\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  return {\n    users,\n    isLoading: loading,\n    isError: error,\n  };\n};\n\nexport default useUsers;\n","import { Edit, TrendingFlat } from '@mui/icons-material';\nimport { Box, Checkbox, Paper, styled, Table, TableBody, TableCell, TableRow } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport TableContainer from '@mui/material/TableContainer';\nimport TablePagination from '@mui/material/TablePagination';\nimport { Breadcrumb } from 'app/components';\nimport TableHead from 'app/components/data-table/TableHead';\nimport TableToolbar from 'app/components/data-table/TableToolbar';\nimport { getComparator, stableSort } from 'app/components/data-table/utils';\nimport { H5 } from 'app/components/Typography';\nimport useTable from 'app/hooks/useTable';\nimport useUsers from 'app/hooks/useUsers';\nimport { useNavigate } from 'react-router-dom';\n\n// styled components\nconst IMG = styled('img')({ height: 32, borderRadius: '4px' });\nconst FlexBox = styled(Box)({ display: 'flex', alignItems: 'center' });\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: {\n    margin: '16px'\n  },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' }\n  }\n}));\n\nconst CustomerList = () => {\n  const {\n    page,\n    order,\n    orderBy,\n    selected,\n    rowsPerPage,\n\n    isSelected,\n    handleClick,\n    handleChangePage,\n    handleRequestSort,\n    handleSelectAllClick,\n    handleChangeRowsPerPage\n  } = useTable({ defaultOrderBy: 'name' });\n\n  const { users } = useUsers();\n  const navigate = useNavigate();\n\n  // TABLE HEADER COLUMN LIST\n  const columns = [\n    { id: 'name', align: 'left', disablePadding: true, label: 'Name' },\n    { id: 'address', align: 'center', disablePadding: false, label: 'Address' },\n    { id: 'company', align: 'center', disablePadding: false, label: 'Company' },\n    { id: 'balance', align: 'center', disablePadding: false, label: 'Balance' },\n    { id: 'edit', align: 'center', disablePadding: false, label: 'Edit' }\n  ];\n\n  const handleSelectAllRows = (event) => {\n    const newSelected = users.map((n) => n.name);\n    handleSelectAllClick(event.target.checked, newSelected);\n  };\n\n  const filteredUsers = users?.map((item) => ({\n    name: item.name,\n    email: item.email,\n    imgUrl: item.imgUrl,\n    balance: item.balance,\n    address: item.address,\n    company: item.company\n  }));\n\n  return (\n    <Container>\n      <div className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Pages', path: '/pages' }, { name: 'Customer List' }]}\n        />\n      </div>\n\n      <Paper sx={{ width: '100%', mb: 2 }}>\n        <TableToolbar title=\"All Customers\" numSelected={selected.length} />\n\n        <TableContainer>\n          <Table sx={{ minWidth: 750 }}>\n            <TableHead\n              order={order}\n              orderBy={orderBy}\n              headCells={columns}\n              numSelected={selected.length}\n              rowCount={filteredUsers.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllRows}\n            />\n\n            <TableBody>\n              {stableSort(filteredUsers, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const isItemSelected = isSelected(row.name);\n\n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={row.name}\n                      role=\"checkbox\"\n                      selected={isItemSelected}\n                      aria-checked={isItemSelected}\n                      onClick={(event) => handleClick(event, row.name)}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox color=\"primary\" checked={isItemSelected} />\n                      </TableCell>\n\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <FlexBox gap={1}>\n                          <IMG src={row.imgUrl} alt=\"user\" />\n                          <H5 fontSize={15}>{row.name}</H5>\n                        </FlexBox>\n                      </TableCell>\n\n                      <TableCell align=\"center\">{row.address}</TableCell>\n\n                      <TableCell align=\"center\">{row.company}</TableCell>\n\n                      <TableCell align=\"center\">{row.balance}</TableCell>\n\n                      <TableCell align=\"center\">\n                        <IconButton onClick={() => navigate('/pages/view-customer')}>\n                          <Edit />\n                        </IconButton>\n\n                        <IconButton onClick={() => navigate('/pages/new-customer')}>\n                          <TrendingFlat />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <TablePagination\n          page={page}\n          component=\"div\"\n          rowsPerPage={rowsPerPage}\n          count={filteredUsers.length}\n          onPageChange={handleChangePage}\n          rowsPerPageOptions={[5, 10, 25]}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Container>\n  );\n};\n\nexport default CustomerList;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","headCells","_jsx","MuiTableHead","children","_jsxs","TableRow","TableCell","padding","Checkbox","color","onChange","checked","indeterminate","map","headCell","align","disablePadding","sortDirection","id","TableSortLabel","active","onClick","property","event","direction","label","_ref","title","Toolbar","sx","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","Typography","flex","variant","component","Tooltip","IconButton","Delete","FilterList","stableSort","array","comparator","stabilizedThis","el","index","sort","a","b","descendingComparator","getComparator","defaultOrderBy","page","setPage","useState","setOrder","selected","setSelected","rowsPerPage","setRowsPerPage","setOrderBy","isSelected","name","indexOf","handleClick","_","selectedIndex","newSelected","concat","slice","length","handleChangePage","newPage","handleRequestSort","handleSelectAllClick","handleChangeRowsPerPage","parseInt","target","value","useUsers","users","setUsers","loading","setLoading","error","setError","useEffect","async","response","fetch","ok","Error","data","json","console","fetchUsers","isLoading","isError","IMG","styled","height","borderRadius","FlexBox","Box","display","alignItems","Container","margin","breakpoints","down","marginBottom","CustomerList","useTable","navigate","useNavigate","filteredUsers","item","email","imgUrl","balance","address","company","className","Breadcrumb","routeSegments","path","Paper","width","mb","TableToolbar","TableContainer","Table","minWidth","TableHead","n","TableBody","row","isItemSelected","hover","tabIndex","role","scope","gap","src","alt","H5","fontSize","Edit","TrendingFlat","TablePagination","count","onPageChange","rowsPerPageOptions","onRowsPerPageChange","createSvgIcon","d"],"sourceRoot":""}