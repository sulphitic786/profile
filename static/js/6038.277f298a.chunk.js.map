{"version":3,"file":"static/js/6038.277f298a.chunk.js","mappings":"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","sources":["app/views/todo/TodoItem.jsx","app/views/todo/TodoList.jsx","app/views/todo/AppTodo.jsx","app/views/todo/TodoService.js"],"sourcesContent":["import {\n  Box,\n  Card,\n  Checkbox,\n  Chip,\n  FormControlLabel,\n  Icon,\n  IconButton,\n  MenuItem,\n  styled,\n  useTheme,\n} from \"@mui/material\";\nimport { MatxMenu } from \"app/components\";\nimport { Paragraph } from \"app/components/Typography\";\nimport { Link } from \"react-router-dom\";\n\nconst FlexBox = styled(Box)({\n  display: \"flex\",\n  alignItems: \"center\",\n});\n\nconst FlexWrap = styled(FlexBox)({\n  flexWrap: \"wrap\",\n});\n\nconst StyledLink = styled(Link)({\n  flexGrow: 1,\n  display: \"flex\",\n  alignItems: \"center\",\n});\n\nconst TodoItem = ({ todo = { tag: [] }, tagList, updateTodo }) => {\n  const { palette } = useTheme();\n  const textMuted = palette.text.secondary;\n\n  return (\n    <Card sx={{ borderRadius: 0 }} elevation={1}>\n      <FlexWrap p={2}>\n        <StyledLink to={`/todo/list/${todo.id}`}>\n          <Icon sx={{ cursor: \"move\" }}>open_with</Icon>\n          <Box ml={2}>\n            <Paragraph sx={{ mb: 2 }}>{todo.title}</Paragraph>\n            <Paragraph sx={{ mb: \"12px\", color: textMuted }}>{todo.note}</Paragraph>\n            {todo.tag.map((tagId, index) => {\n              let tagName = (tagList.find((tag) => tag.id === tagId) || {}).name;\n              if (!tagName) return null;\n              else {\n                return (\n                  <Chip\n                    key={index}\n                    sx={{ mr: \"12px\" }}\n                    label={tagList.find((tag) => tag.id === tagId).name}\n                  />\n                );\n              }\n            })}\n          </Box>\n        </StyledLink>\n\n        <FlexWrap>\n          <IconButton onClick={() => updateTodo({ ...todo, important: !todo.important })}>\n            <Icon color={todo.important ? \"error\" : \"inherit\"}>\n              {todo.important ? \"error\" : \"error_outline\"}\n            </Icon>\n          </IconButton>\n\n          <IconButton onClick={() => updateTodo({ ...todo, starred: !todo.starred })}>\n            <Icon color={todo.starred ? \"secondary\" : \"inherit\"}>\n              {todo.starred ? \"star\" : \"star_outline\"}\n            </Icon>\n          </IconButton>\n\n          <MatxMenu\n            menuButton={\n              <IconButton>\n                <Icon>more_vert</Icon>\n              </IconButton>\n            }\n          >\n            <MenuItem>\n              <FormControlLabel\n                onChange={() => updateTodo({ ...todo, done: !todo.done })}\n                control={<Checkbox checked={todo.done} />}\n                label={`Mark As ${todo.done ? \"Und\" : \"D\"}one`}\n              />\n            </MenuItem>\n\n            <MenuItem>\n              <FormControlLabel\n                onChange={() => updateTodo({ ...todo, read: !todo.read })}\n                control={<Checkbox checked={todo.read} />}\n                label={`Mark As ${todo.read ? \"Unr\" : \"R\"}ead`}\n              />\n            </MenuItem>\n          </MatxMenu>\n        </FlexWrap>\n      </FlexWrap>\n    </Card>\n  );\n};\n\nexport default TodoItem;\n","import { Box, Button, Card, Icon, IconButton, MenuItem, styled } from \"@mui/material\";\nimport { MatxMenu } from \"app/components\";\nimport { FlexBetween } from \"app/components/FlexBox\";\nimport { H2 } from \"app/components/Typography\";\nimport { debounce } from \"lodash\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { useNavigate } from \"react-router-dom\";\nimport TodoItem from \"./TodoItem\";\nimport { getAllTodo, getAllTodoTag, reorderTodoList, updateTodoById } from \"./TodoService\";\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  margin: \"30px\",\n  position: \"relative\",\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\n}));\n\nconst ContentBox = styled(FlexBetween)(() => ({\n  paddingTop: \"8px\",\n  paddingBottom: \"8px\",\n  background: \"rgba(0, 0, 0, 0.01)\",\n}));\n\nconst TodoList = ({ query }) => {\n  const navigate = useNavigate();\n  const [tagList, setTagList] = useState([]);\n  const [isAlive, setIsAlive] = useState(true);\n  const [todoList, setTodoList] = useState([]);\n  const [filteredTodoList, setFilteredTodoList] = useState([]);\n\n  const getAllTodoAndTagList = useCallback(async () => {\n    let [{ data: todoList }, { data: tagList }] = await Promise.all([\n      getAllTodo(),\n      getAllTodoTag(),\n    ]);\n    if (isAlive) {\n      setFilteredTodoList(todoList);\n      setTodoList(todoList);\n      setTagList(tagList);\n    }\n  }, [isAlive]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const search = useCallback(\n    debounce((query) => {\n      query = query.trim().toLowerCase();\n      if (query !== \"\") {\n        let filteredTodoList = todoList.filter(\n          (todo) => todo.title.toLowerCase().match(query) || todo.note.toLowerCase().match(query)\n        );\n        setFilteredTodoList([...filteredTodoList]);\n      } else {\n        setFilteredTodoList(todoList);\n      }\n    }, 250),\n    [todoList]\n  );\n\n  useEffect(() => {\n    getAllTodoAndTagList();\n    return () => setIsAlive(false);\n  }, [getAllTodoAndTagList]);\n\n  useEffect(() => {\n    search(query);\n  }, [query, search]);\n\n  const updateTodo = async (todo) => {\n    const { data: updatedTodo } = await updateTodoById(todo);\n    if (isAlive) {\n      let list1 = todoList.map((item) => {\n        if (item.id === updatedTodo.id) return updatedTodo;\n        return item;\n      });\n\n      let list2 = filteredTodoList.map((item) => {\n        if (item.id === updatedTodo.id) return updatedTodo;\n        return item;\n      });\n\n      setTodoList([...list1]);\n      setFilteredTodoList([...list2]);\n    }\n  };\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  const handleDragEnd = async (result) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    let todoList = reorder(filteredTodoList, result.source.index, result.destination.index);\n\n    let { data } = await reorderTodoList(todoList);\n\n    if (isAlive) {\n      setFilteredTodoList(data);\n      setTodoList(data);\n    }\n  };\n\n  const filterTodoListByProperty = (queryField, queryValue) => {\n    if (queryField !== \"all\") {\n      let list = todoList.filter((todo) => todo[queryField] === queryValue);\n      setFilteredTodoList([...list]);\n    } else {\n      setFilteredTodoList([...todoList]);\n    }\n  };\n\n  const filterTodoListByTag = (tagId) => {\n    if (tagId !== \"all\") {\n      let list = todoList.filter((todo) => todo.tag.includes(tagId));\n      setFilteredTodoList([...list]);\n    } else {\n      setFilteredTodoList([...todoList]);\n    }\n  };\n\n  // New Drag and Drop data logic\n  const [dragAbleItem, setDragAbleItem] = useState([]);\n  const getItems = (count) =>\n    count.map((k, i) => ({\n      done: k.done,\n      dueDate: k.dueDate,\n      id: `${k.id}`,\n      important: k.important,\n      note: k.note,\n      read: k.read,\n      selected: k.selected,\n      starred: k.starred,\n      startDate: k.startDate,\n      tag: k.tag,\n      title: k.title,\n    }));\n\n  useEffect(() => {\n    if (filteredTodoList.length > 0) {\n      setDragAbleItem(getItems(filteredTodoList));\n    }\n  }, [filteredTodoList]);\n\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    const tempItems = reorder(dragAbleItem, result.source.index, result.destination.index);\n    setDragAbleItem(tempItems);\n  };\n\n  return (\n    <StyledCard className=\"todo\">\n      <ContentBox>\n        <div>\n          <MatxMenu\n            menuButton={\n              <IconButton size=\"large\">\n                <Icon>arrow_drop_down</Icon>\n              </IconButton>\n            }\n          >\n            <MenuItem onClick={() => filterTodoListByProperty(\"all\")}>All</MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"read\", true)}>Read</MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"read\", false)}>Unread</MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"done\", true)}>Done</MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"done\", false)}>Undone</MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"important\", true)}>\n              Important\n            </MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"important\", false)}>\n              Unimportant\n            </MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"starred\", true)}>Starred</MenuItem>\n            <MenuItem onClick={() => filterTodoListByProperty(\"starred\", false)}>\n              Unstarred\n            </MenuItem>\n          </MatxMenu>\n          <MatxMenu\n            menuButton={\n              <IconButton size=\"large\">\n                <Icon>label</Icon>\n              </IconButton>\n            }\n          >\n            <MenuItem\n              sx={{ textTransform: \"capitalize\" }}\n              onClick={() => filterTodoListByTag(\"all\")}\n            >\n              all\n            </MenuItem>\n            {tagList.map((tag) => (\n              <MenuItem\n                key={tag.id}\n                sx={{ textTransform: \"capitalize\" }}\n                onClick={() => filterTodoListByTag(tag.id)}\n              >\n                {tag.name}\n              </MenuItem>\n            ))}\n          </MatxMenu>\n        </div>\n\n        <Box pr={2}>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => navigate(\"/todo/list/add\")}>\n            Create Todo\n          </Button>\n        </Box>\n      </ContentBox>\n\n      <div className=\"todo-list\">\n        {/* Previous Drag and Drop Code Start*/}\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                {filteredTodoList.map((todo, index) => (\n                  <Draggable key={todo.id} draggableId={parseFloat(todo.id)} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={provided.draggableProps.style}\n                      >\n                        <TodoItem\n                          tagList={tagList}\n                          updateTodo={updateTodo}\n                          key={index}\n                          todo={todo}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        {/* Previous Drag and Drop Code End*/}\n\n        <Box p={2}>\n          <H2>New Drag and Drop Start From Here for testing</H2>\n        </Box>\n\n        {/* New Drag and Drop Code Start*/}\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                {dragAbleItem.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <TodoItem\n                          tagList={tagList}\n                          updateTodo={updateTodo}\n                          key={index}\n                          todo={item}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        {/* New Drag and Drop Code End*/}\n      </div>\n    </StyledCard>\n  );\n};\n\nexport default TodoList;\n","import { Box, Icon, styled, TextField, useTheme } from \"@mui/material\";\nimport { useState } from \"react\";\nimport TodoList from \"./TodoList\";\n\nconst AppTodoRoot = styled(\"div\")(({ theme }) => ({\n  \"& .searchBoxHolder\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    height: \"calc(220px - 94px + 30px)\",\n    [theme.breakpoints.down(\"sm\")]: { height: \"calc(220px - 94px -16px + 30px)\" },\n  },\n  \"& .searchBox\": {\n    width: \"calc(100% - 60px)\",\n    [theme.breakpoints.down(\"sm\")]: { width: \"calc(100% - 32px)\" },\n  },\n  \"& .todoContent\": { marginTop: -94 },\n}));\n\nconst AppTodo = () => {\n  const [query, setQuery] = useState(\"\");\n  const handleQueryChange = (event) => setQuery(event.target.value);\n\n  const { palette } = useTheme();\n  const bgPrimary = palette.primary.main;\n\n  return (\n    <AppTodoRoot>\n      <Box height={220} sx={{ background: bgPrimary }}>\n        <div className=\"searchBoxHolder\">\n          <div className=\"searchBox\">\n            <TextField\n              fullWidth\n              name=\"query\"\n              value={query}\n              size=\"medium\"\n              variant=\"outlined\"\n              InputProps={{\n                startAdornment: <Icon sx={{ mr: \"12px\" }}>search</Icon>,\n                style: {\n                  outline: \"none\",\n                  borderRadius: 300,\n                  background: \"white\",\n                },\n              }}\n              onChange={handleQueryChange}\n            />\n          </div>\n        </div>\n      </Box>\n\n      <div className=\"todoContent\">\n        <TodoList query={query} />\n      </div>\n    </AppTodoRoot>\n  );\n};\n\nexport default AppTodo;\n","import axios from \"axios\";\n\nexport const getAllTodo = () => {\n  return axios.get(\"/api/todo/all\");\n};\n\nexport const getTodoById = (todoId) => {\n  return axios.get(\"/api/todo\", { data: todoId });\n};\n\nexport const reorderTodoList = (todoList) => {\n  return axios.post(\"/api/todo/reorder\", { todoList });\n};\n\nexport const addTodo = (todo) => {\n  return axios.post(\"/api/todo/add\", { todo });\n};\n\nexport const updateTodoById = (todo) => {\n  return axios.post(\"/api/todo/update\", { todo });\n};\n\nexport const deleteTodo = (todo) => {\n  return axios.post(\"/api/todo/delete\", { todo });\n};\n\n// tag management\nexport const getAllTodoTag = () => {\n  return axios.get(\"/api/todo/tag\");\n};\n\nexport const addNewTag = (tag) => {\n  return axios.post(\"/api/todo/tag/add\", { tag });\n};\n\nexport const deleteTag = (tag) => {\n  return axios.post(\"/api/todo/tag/delete\", { tag });\n};\n"],"names":["FlexBox","styled","Box","display","alignItems","FlexWrap","flexWrap","StyledLink","Link","flexGrow","_ref","todo","tag","tagList","updateTodo","palette","useTheme","textMuted","text","secondary","_jsx","Card","sx","borderRadius","elevation","children","_jsxs","p","to","concat","id","Icon","cursor","ml","Paragraph","mb","title","color","note","map","tagId","index","find","name","Chip","mr","label","IconButton","onClick","important","starred","MatxMenu","menuButton","MenuItem","FormControlLabel","onChange","done","control","Checkbox","checked","read","StyledCard","theme","margin","position","breakpoints","down","ContentBox","FlexBetween","paddingTop","paddingBottom","background","_ref2","query","navigate","useNavigate","setTagList","useState","isAlive","setIsAlive","todoList","setTodoList","filteredTodoList","setFilteredTodoList","getAllTodoAndTagList","useCallback","async","data","Promise","all","getAllTodo","getAllTodoTag","search","debounce","trim","toLowerCase","filter","match","useEffect","updatedTodo","updateTodoById","list1","item","list2","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","filterTodoListByProperty","queryField","queryValue","filterTodoListByTag","includes","dragAbleItem","setDragAbleItem","length","k","i","dueDate","selected","startDate","className","size","textTransform","pr","Button","variant","DragDropContext","onDragEnd","destination","source","reorderTodoList","Droppable","droppableId","provided","snapshot","droppableProps","ref","innerRef","Draggable","draggableId","parseFloat","draggableProps","dragHandleProps","style","TodoItem","placeholder","H2","tempItems","AppTodoRoot","flexDirection","justifyContent","height","width","marginTop","AppTodo","setQuery","bgPrimary","primary","main","TextField","fullWidth","value","InputProps","startAdornment","outline","event","target","TodoList","axios","get","getTodoById","todoId","post","addTodo","deleteTodo","addNewTag","deleteTag"],"sourceRoot":""}