{"version":3,"file":"static/js/4901.b5e2d8d9.chunk.js","mappings":"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","sources":["app/views/pages/management/contactus/ContactUsRequests.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Paper, styled, Icon, Grid, Tooltip, TextField } from '@mui/material';\nimport { Breadcrumb } from 'app/components';\nimport DataTable from 'react-data-table-component';\nimport { getDateFromTimestamp } from 'app/utils/utils';\n// import '@styles/react/libs/tables/react-dataTable-component.scss';\nimport { collection, getDocs, deleteDoc, doc } from 'firebase/firestore';\nimport { MatxLoading } from 'app/components';\nimport { fireStore } from 'config';\nimport { useNavigate } from 'react-router-dom';\nimport { useAlert } from 'app/contexts/AlertContext';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: {\n    margin: '16px'\n  },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' }\n  }\n}));\n\nconst FilterComponent = ({ filterText, onFilter }) => {\n  return (\n    <TextField\n      placeholder=\"Search Input\"\n      label=\"Quick Search\"\n      value={filterText}\n      onChange={onFilter}\n      id=\"search\"\n      className=\"\"\n    />\n  );\n};\n\nconst ContactUsRequests = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [filterText, setFilterText] = useState('');\n  const { showAlert } = useAlert();\n\n  useEffect(() => {\n    fetchData(); // Fetch data when the component mounts\n  }, []);\n\n  const deleteRequestHandler = async (data) => {\n    try {\n      setLoading(true);\n      // Delete the document with the given ID\n      await deleteDoc(doc(fireStore, 'contact-us', data.id));\n      showAlert('success', 'Data deleted successfully.');\n      setLoading(false);\n      fetchData();\n    } catch (error) {\n      setLoading(false);\n      showAlert('error', 'Error while deleting request.');\n      console.error('Error deleting data from Firebase:', error);\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const response = await getDocs(collection(fireStore, 'contact-us'));\n      const dataFromFirebase = response.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setLoading(false);\n      setUsers(dataFromFirebase);\n      showAlert('success', 'Data fetch successfully.');\n    } catch (error) {\n      setLoading(false);\n      showAlert('error', 'Error while fetching data.');\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const navigate = useNavigate();\n\n  const columns = [\n    {\n      name: 'Name',\n      sortable: true,\n      minWidth: '102px',\n      sortField: 'name',\n      selector: (row) => row.name,\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center \">\n          <div className=\"d-flex flex-column\">{row.name}</div>\n        </div>\n      )\n    },\n    {\n      name: 'Phone',\n      sortable: true,\n      minWidth: '102px',\n      sortField: 'phone',\n      selector: (row) => row.phone,\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center \">\n          <div className=\"d-flex flex-column\">{row.phone}</div>\n        </div>\n      )\n    },\n    {\n      name: 'Email',\n      sortable: true,\n      minWidth: '102px',\n      sortField: 'email',\n      selector: (row) => row.email,\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center \">\n          <div className=\"d-flex flex-column\">{row.email}</div>\n        </div>\n      )\n    },\n    {\n      name: 'Subject',\n      sortable: true,\n      minWidth: '102px',\n      sortField: 'subject',\n      selector: (row) => row.subject,\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center \">\n          <div className=\"d-flex flex-column\">{row.subject}</div>\n        </div>\n      )\n    },\n    {\n      name: 'Message',\n      sortable: true,\n      minWidth: '200px',\n      sortField: 'message',\n      selector: (row) => row.message,\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center \">\n          <div className=\"d-flex flex-column\">\n            {/* {row.message} */}\n            {row.message.length > 50 ? `${row.message.substring(0, 50)}...` : row.message}\n          </div>\n        </div>\n      )\n    },\n    {\n      name: 'Date',\n      sortable: true,\n      minWidth: '102px',\n      sortField: 'date',\n      selector: (row) => row.created_at,\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center \">\n          <div className=\"d-flex flex-column\">{getDateFromTimestamp(row.created_at)}</div>\n        </div>\n      )\n    },\n    {\n      name: 'Action',\n      sortable: true,\n      minWidth: '102px',\n      sortField: 'date',\n      selector: (row) => row.created_at,\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center \">\n          <div className=\"d-flex \">\n            <Tooltip title=\"Delete Request\">\n              <Icon onClick={() => deleteRequestHandler(row)} color=\"error\" fontSize=\"small\">\n                delete_forever\n              </Icon>\n            </Tooltip>\n            {/* {getDateFromTimestamp(row.created_at)} */}\n          </div>\n        </div>\n      )\n    }\n  ];\n\n  const ExpandableTable = ({ data }) => {\n    return (\n      <>\n        <div\n          className=\"d-flex justify-content-center align-items-center py-2\"\n          style={{ backgroundColor: '#e0d9d9', opacity: '0.5', fontStyle: 'italic' }}\n        >\n          <div className=\"d-flex flex-column\">{data.message}</div>\n        </div>\n      </>\n    );\n  };\n\n  const subheaderComponentHandler = () => {\n    return (\n      <>\n        <Grid lg={12} md={12} sm={12} xs={12} sx={{ mt: 2 }}>\n          {/* <TableToolbar title=\"All Requests\" /> */}\n          {/* <span>All Requests</span> */}\n          <FilterComponent\n            onFilter={(e) => setFilterText(e.target.value)}\n            filterText={filterText}\n          />\n        </Grid>\n      </>\n    );\n  };\n\n  const handleSelectAllRows = (event) => {};\n\n  if (users) {\n    var filteredData = users.filter((item) => {\n      const itemString = JSON.stringify(item).toLowerCase();\n      return itemString.includes(filterText.toLowerCase());\n    });\n  }\n\n  return (\n    <Container>\n      {loading && <MatxLoading />}\n      <div className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Pages', path: '/pages' }, { name: 'contact-us-list' }]}\n        />\n      </div>\n\n      <Paper sx={{ width: '100%', overflowX: 'scroll' }}>\n        <DataTable\n          responsive\n          striped\n          highlightOnHover\n          persistTableHead\n          subHeader\n          subHeaderAlign=\"right\"\n          fixedHeader\n          fixedHeaderScrollHeight=\"50vh\"\n          columns={columns}\n          data={filteredData}\n          // sortIcon={<ChevronDown />}\n          className=\"react-dataTable\"\n          pagination\n          // selectableRows\n          expandableRows\n          expandOnRowClicked\n          expandableRowsComponent={ExpandableTable}\n          // onSelectedRowsChange={handleRowsSelection}\n          subHeaderComponent={subheaderComponentHandler()}\n          paginationPerPage={250}\n          paginationRowsPerPageOptions={[250, 500, 750, 1000]}\n        />\n      </Paper>\n    </Container>\n  );\n};\n\nexport default ContactUsRequests;\n"],"names":["Container","styled","_ref","theme","margin","breakpoints","down","marginBottom","FilterComponent","_ref2","filterText","onFilter","_jsx","TextField","placeholder","label","value","onChange","id","className","ContactUsRequests","users","setUsers","useState","loading","setLoading","setFilterText","showAlert","useAlert","useEffect","fetchData","async","dataFromFirebase","getDocs","collection","fireStore","docs","map","doc","data","error","console","columns","useNavigate","name","sortable","minWidth","sortField","selector","row","cell","children","phone","email","subject","message","length","concat","substring","created_at","getDateFromTimestamp","Tooltip","title","Icon","onClick","deleteDoc","deleteRequestHandler","color","fontSize","filteredData","filter","item","JSON","stringify","toLowerCase","includes","_jsxs","MatxLoading","Breadcrumb","routeSegments","path","Paper","sx","width","overflowX","DataTable","responsive","striped","highlightOnHover","persistTableHead","subHeader","subHeaderAlign","fixedHeader","fixedHeaderScrollHeight","pagination","expandableRows","expandOnRowClicked","expandableRowsComponent","_ref3","_Fragment","style","backgroundColor","opacity","fontStyle","subHeaderComponent","Grid","lg","md","sm","xs","mt","e","target","paginationPerPage","paginationRowsPerPageOptions"],"sourceRoot":""}