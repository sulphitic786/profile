{"version":3,"file":"static/js/6223.6a4f7d21.chunk.js","mappings":"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","sources":["app/views/portfolio/ContactUs.jsx"],"sourcesContent":["import { Fragment } from 'react';\r\nimport { Breadcrumb } from 'app/components';\r\nimport { MatxLoading } from 'app/components';\r\nimport { Button, Grid, Icon, Box, styled } from '@mui/material';\r\nimport { Span } from 'app/components/Typography';\r\nimport { useEffect, useState } from 'react';\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\nimport { addDoc, collection, Timestamp } from 'firebase/firestore';\r\nimport { fireStore } from 'config';\r\nimport { useAlert } from 'app/contexts/AlertContext';\r\nimport { getIsoDate } from 'app/utils/utils';\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n  margin: '0px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' }\r\n}));\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '20px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' }\r\n  }\r\n}));\r\n\r\nconst TextField = styled(TextValidator)(() => ({\r\n  width: '100%',\r\n  marginBottom: '14px'\r\n}));\r\n\r\nconst About = () => {\r\n  const [state, setState] = useState({ created_at: getIsoDate() });\r\n  const [loading, setLoading] = useState(false);\r\n  const { showAlert } = useAlert();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      // Save data to \"contact-us\" collection\r\n      const res = await addDoc(collection(fireStore, 'contact-us'), {\r\n        ...state,\r\n        created_at: getIsoDate()\r\n      });\r\n\r\n      // After submitting, you might want to clear the form or perform other actions\r\n      setState({});\r\n      setLoading(false);\r\n      // console.log('response', res);\r\n      showAlert('success', 'Your response sent successfully.');\r\n\r\n      // You may also want to fetch updated data if needed\r\n      // fetchData();\r\n    } catch (error) {\r\n      showAlert('error', 'Error while saving data.');\r\n      console.error('Error saving data to Firebase:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    // console.log('event', event);\r\n    event.persist();\r\n    setState({ ...state, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const { name, phone, email, subject, message, created_at } = state;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n        {loading && <MatxLoading />}\r\n        <Box className=\"breadcrumb\">\r\n          <Breadcrumb\r\n            routeSegments={[{ name: 'Profile', path: '/portfolio/about' }, { name: 'Contact' }]}\r\n          />\r\n        </Box>\r\n        <ContentBox className=\"about\">\r\n          <div className=\"p-2\">\r\n            <div className=\"section-title\">\r\n              <h2>Contact</h2>\r\n              <p>\r\n                Here is my contact info to reach me out easily by the public, so feel free to\r\n                contact me regarding any tachnical devlopment assitance or issue.\r\n              </p>\r\n            </div>\r\n            <Grid container spacing={6} className=\"contact\">\r\n              <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                <div className=\"d-flex align-items-stretch\">\r\n                  <div className=\"info\">\r\n                    <div className=\"address\">\r\n                      <i className=\"icofont-phone me-3\">\r\n                        <Icon color=\"primary\">location_on</Icon>\r\n                      </i>\r\n                      <h6 className=\"fw-bold\">Location:</h6>\r\n                      <p>Islamabad</p>\r\n                    </div>\r\n\r\n                    <div className=\"email\">\r\n                      <i className=\"icofont-phone me-3\">\r\n                        <Icon color=\"primary\" className=\"\">\r\n                          mail_outline\r\n                        </Icon>\r\n                      </i>\r\n                      <h6 className=\"fw-bold\">Email:</h6>\r\n                      <p>wqasimg@gmail.com</p>\r\n                    </div>\r\n\r\n                    <div className=\"phone\">\r\n                      <i className=\"icofont-phone me-3\">\r\n                        <Icon color=\"primary\">phone_in_talk</Icon>\r\n                      </i>\r\n                      <h6 className=\"fw-bold\">Call:</h6>\r\n                      <p>+92324 4929494</p>\r\n                    </div>\r\n                    <iframe\r\n                      src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d6640.600245896029!2d73.0127589232893!3d33.67529215132975!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x38dfbe20192c81c9%3A0x28808a565e31833!2sG-10%20Markaz%20G%2010%20Markaz%20G-10%2C%20Islamabad%2C%20Islamabad%20Capital%20Territory%2C%20Pakistan!5e0!3m2!1sen!2sus!4v1656798445719!5m2!1sen!2sus\"\r\n                      frameborder=\"0\"\r\n                      style={{ border: '0', width: '92%', height: '250px' }}\r\n                      allowfullscreen=\"\"\r\n                      loading=\"lazy\"\r\n                    ></iframe>\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"standard-basic\"\r\n                    label=\"Name *\"\r\n                    value={name || ''}\r\n                    onChange={handleChange}\r\n                    errorMessages={['this field is required']}\r\n                    validators={['required', 'minStringLength: 4', 'maxStringLength: 35']}\r\n                  />\r\n\r\n                  <TextField\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    value={phone || ''}\r\n                    label=\"Mobile Number *\"\r\n                    onChange={handleChange}\r\n                    validators={[\r\n                      'required',\r\n                      'isNumber',\r\n                      'minStringLength:10',\r\n                      'maxStringLength:10'\r\n                    ]}\r\n                    errorMessages={[\r\n                      'this field is required',\r\n                      'phone number must contain only digits',\r\n                      'phone number must be 10 digits',\r\n                      'phone number must be 10 digits'\r\n                    ]}\r\n                  />\r\n\r\n                  <TextField\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    value={email || ''}\r\n                    onChange={handleChange}\r\n                    // validators={['required', 'isEmail']}\r\n                    // errorMessages={['this field is required', 'email is not valid']}\r\n                  />\r\n\r\n                  <TextField\r\n                    type=\"text\"\r\n                    name=\"subject\"\r\n                    label=\"Subject\"\r\n                    onChange={handleChange}\r\n                    value={subject || ''}\r\n                    // validators={['required']}\r\n                    // errorMessages={['this field is required']}\r\n                  />\r\n\r\n                  <TextField\r\n                    type=\"text\"\r\n                    multiline\r\n                    rows={6}\r\n                    placeholder=\"Write Your Message\"\r\n                    name=\"message\"\r\n                    label=\"Message *\"\r\n                    onChange={handleChange}\r\n                    value={message || ''}\r\n                    validators={['required']}\r\n                    errorMessages={['this field is required']}\r\n                  />\r\n\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    className=\"text-center mx-auto\"\r\n                  >\r\n                    <Icon>send</Icon>\r\n                    <Span sx={{ pl: 1, textTransform: 'capitalize' }}>Send Message</Span>\r\n                  </Button>\r\n                </ValidatorForm>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </ContentBox>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"],"names":["ContentBox","styled","_ref","theme","margin","breakpoints","down","Container","_ref2","marginBottom","TextField","TextValidator","width","About","state","setState","useState","created_at","getIsoDate","loading","setLoading","showAlert","useAlert","handleChange","event","persist","target","name","value","phone","email","subject","message","_jsx","Fragment","children","_jsxs","MatxLoading","Box","className","Breadcrumb","routeSegments","path","Grid","container","spacing","item","lg","md","sm","xs","sx","mt","Icon","color","src","frameborder","style","border","height","allowfullscreen","ValidatorForm","onSubmit","async","preventDefault","addDoc","collection","fireStore","error","console","onError","type","id","label","onChange","errorMessages","validators","multiline","rows","placeholder","Button","variant","Span","pl","textTransform"],"sourceRoot":""}